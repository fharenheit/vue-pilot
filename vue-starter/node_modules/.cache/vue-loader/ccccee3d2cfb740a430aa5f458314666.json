{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-starter/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-starter/src/vendor/libs/sidenav/SidenavComponent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-starter/src/vendor/libs/sidenav/SidenavComponent.vue","mtime":1547968626000},{"path":"/Volumes/Data/Projects/pilot/vue-starter/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-starter/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-starter/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\nimport PerfectScrollbar from 'perfect-scrollbar'\nconst SideNav = require('./sidenav.js').SideNav\n\nexport default {\n  name: 'sidenav',\n  props: {\n    orientation: {\n      type: String,\n      default: 'vertical'\n    },\n    animate: {\n      type: Boolean,\n      default: true\n    },\n    accordion: {\n      type: Boolean,\n      default: true\n    },\n    closeChildren: {\n      type: Boolean,\n      default: false\n    },\n    showDropdownOnHover: {\n      type: Boolean,\n      default: false\n    },\n    onOpen: Function,\n    onOpened: Function,\n    onClose: Function,\n    onClosed: Function\n  },\n  mounted () {\n    this.orientation = this.orientation === 'horizontal' ? 'horizontal' : 'vertical'\n\n    this.sidenav = new SideNav(this.$el, {\n      orientation: this.orientation,\n      animate: this.animate,\n      accordion: this.accordion,\n      closeChildren: this.closeChildren,\n      showDropdownOnHover: this.showDropdownOnHover,\n\n      onOpen: this.onOpen,\n      onOpened: this.onOpened,\n      onClose: this.onClose,\n      onClosed: this.onClosed\n    }, PerfectScrollbar)\n  },\n  beforeDestroy () {\n    if (this.sidenav) this.sidenav.destroy()\n    this.sidenav = null\n  }\n}\n",{"version":3,"sources":["SidenavComponent.vue"],"names":[],"mappings":";;;;;;;;;AASA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SidenavComponent.vue","sourceRoot":"src/vendor/libs/sidenav","sourcesContent":["<template>\n  <nav class=\"sidenav\" :class=\"'sidenav-' + orientation\">\n    <slot></slot>\n  </nav>\n</template>\n\n<style src=\"@/vendor/libs/perfect-scrollbar/perfect-scrollbar.scss\" lang=\"scss\"></style>\n\n<script>\nimport PerfectScrollbar from 'perfect-scrollbar'\nconst SideNav = require('./sidenav.js').SideNav\n\nexport default {\n  name: 'sidenav',\n  props: {\n    orientation: {\n      type: String,\n      default: 'vertical'\n    },\n    animate: {\n      type: Boolean,\n      default: true\n    },\n    accordion: {\n      type: Boolean,\n      default: true\n    },\n    closeChildren: {\n      type: Boolean,\n      default: false\n    },\n    showDropdownOnHover: {\n      type: Boolean,\n      default: false\n    },\n    onOpen: Function,\n    onOpened: Function,\n    onClose: Function,\n    onClosed: Function\n  },\n  mounted () {\n    this.orientation = this.orientation === 'horizontal' ? 'horizontal' : 'vertical'\n\n    this.sidenav = new SideNav(this.$el, {\n      orientation: this.orientation,\n      animate: this.animate,\n      accordion: this.accordion,\n      closeChildren: this.closeChildren,\n      showDropdownOnHover: this.showDropdownOnHover,\n\n      onOpen: this.onOpen,\n      onOpened: this.onOpened,\n      onClose: this.onClose,\n      onClosed: this.onClosed\n    }, PerfectScrollbar)\n  },\n  beforeDestroy () {\n    if (this.sidenav) this.sidenav.destroy()\n    this.sidenav = null\n  }\n}\n</script>\n"]}]}