{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/vendor/libs/nouislider/Nouislider.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/vendor/libs/nouislider/Nouislider.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport noUiSlider from 'nouislider'\n\nexport default {\n  name: 'nouislider',\n  props: [\n    'value',\n    'options',\n    'disabled'\n  ],\n  mounted () {\n    this.initSlider(this.options)\n  },\n  beforeDestroy () {\n    this.destroySlider()\n    this._oldValue = null\n  },\n  watch: {\n    value (value) {\n      if (value.join(';') === this._oldValue) return\n\n      this._oldValue = value.join(';')\n      this.$el.noUiSlider.set(value)\n    },\n    options (options) {\n      // Reinitialize slider\n      this.destroySlider()\n      this.initSlider(options)\n    },\n    disabled (isDisabled) {\n      this.disableSlider(isDisabled)\n    }\n  },\n  methods: {\n    initSlider (options) {\n      // Set start value\n      if (options) {\n        options.start = this.value\n      } else {\n        options = { start: this.value }\n      }\n\n      // Initialize slider\n      noUiSlider.create(this.$el, options)\n\n      // Update value on slide change\n      this.$el.noUiSlider.on('set', (...args) => {\n        if (args[0].join(';') === this._oldValue) return\n\n        this._oldValue = args[0].join(';')\n        this.$emit('input', args[0])\n        this.$emit('set', args[0])\n      })\n\n      // Events\n      this.$el.noUiSlider.on('update', (...args) => this.$emit('update', args))\n      this.$el.noUiSlider.on('slide', (...args) => this.$emit('slide', args))\n      this.$el.noUiSlider.on('change', (...args) => this.$emit('change', args))\n      this.$el.noUiSlider.on('start', (...args) => this.$emit('start', args))\n      this.$el.noUiSlider.on('end', (...args) => this.$emit('end', args))\n\n      // Disable on init\n      this.disableSlider(this.disabled)\n    },\n\n    disableSlider (isDisabled) {\n      if (isDisabled) {\n        this.$el.setAttribute('disabled', 'disabled')\n      } else {\n        this.$el.removeAttribute('disabled')\n      }\n    },\n\n    destroySlider () {\n      this.$el.noUiSlider.off()\n      this.$el.noUiSlider.destroy()\n    }\n  }\n}\n",{"version":3,"sources":["Nouislider.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Nouislider.vue","sourceRoot":"src/vendor/libs/nouislider","sourcesContent":["<template>\n  <div></div>\n</template>\n\n<style src=\"./nouislider.scss\" lang=\"scss\"></style>\n\n<script>\nimport noUiSlider from 'nouislider'\n\nexport default {\n  name: 'nouislider',\n  props: [\n    'value',\n    'options',\n    'disabled'\n  ],\n  mounted () {\n    this.initSlider(this.options)\n  },\n  beforeDestroy () {\n    this.destroySlider()\n    this._oldValue = null\n  },\n  watch: {\n    value (value) {\n      if (value.join(';') === this._oldValue) return\n\n      this._oldValue = value.join(';')\n      this.$el.noUiSlider.set(value)\n    },\n    options (options) {\n      // Reinitialize slider\n      this.destroySlider()\n      this.initSlider(options)\n    },\n    disabled (isDisabled) {\n      this.disableSlider(isDisabled)\n    }\n  },\n  methods: {\n    initSlider (options) {\n      // Set start value\n      if (options) {\n        options.start = this.value\n      } else {\n        options = { start: this.value }\n      }\n\n      // Initialize slider\n      noUiSlider.create(this.$el, options)\n\n      // Update value on slide change\n      this.$el.noUiSlider.on('set', (...args) => {\n        if (args[0].join(';') === this._oldValue) return\n\n        this._oldValue = args[0].join(';')\n        this.$emit('input', args[0])\n        this.$emit('set', args[0])\n      })\n\n      // Events\n      this.$el.noUiSlider.on('update', (...args) => this.$emit('update', args))\n      this.$el.noUiSlider.on('slide', (...args) => this.$emit('slide', args))\n      this.$el.noUiSlider.on('change', (...args) => this.$emit('change', args))\n      this.$el.noUiSlider.on('start', (...args) => this.$emit('start', args))\n      this.$el.noUiSlider.on('end', (...args) => this.$emit('end', args))\n\n      // Disable on init\n      this.disableSlider(this.disabled)\n    },\n\n    disableSlider (isDisabled) {\n      if (isDisabled) {\n        this.$el.setAttribute('disabled', 'disabled')\n      } else {\n        this.$el.removeAttribute('disabled')\n      }\n    },\n\n    destroySlider () {\n      this.$el.noUiSlider.off()\n      this.$el.noUiSlider.destroy()\n    }\n  }\n}\n</script>\n"]}]}