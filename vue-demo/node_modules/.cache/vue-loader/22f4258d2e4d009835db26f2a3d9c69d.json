{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/UsersEdit.vue?vue&type=template&id=d54cfbb2&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/UsersEdit.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h4\", { staticClass: \"font-weight-bold py-3 mb-4\" }, [\n        _vm._v(\"\\n    Edit user \"),\n        _c(\"span\", { staticClass: \"text-muted\" }, [\n          _vm._v(\"#\" + _vm._s(_vm.userData.id))\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"b-tabs\",\n        { staticClass: \"nav-tabs-top nav-responsive-sm\" },\n        [\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Account\", active: \"\" } },\n            [\n              _c(\"b-card-body\", [\n                _c(\"div\", { staticClass: \"media align-items-center\" }, [\n                  _c(\"img\", {\n                    staticClass: \"d-block ui-w-80\",\n                    attrs: {\n                      src: _vm.baseUrl + \"img/avatars/\" + _vm.userData.avatar,\n                      alt: \"\"\n                    }\n                  }),\n                  _vm._v(\" \"),\n                  _c(\n                    \"div\",\n                    { staticClass: \"media-body ml-3\" },\n                    [\n                      _c(\"label\", { staticClass: \"form-label d-block mb-2\" }, [\n                        _vm._v(\"Avatar\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\n                        \"b-btn\",\n                        { attrs: { variant: \"outline-primary\", size: \"sm\" } },\n                        [_vm._v(\"Change\")]\n                      ),\n                      _vm._v(\"Â \\n            \"),\n                      _c(\n                        \"b-btn\",\n                        {\n                          attrs: { variant: \"default md-btn-flat\", size: \"sm\" }\n                        },\n                        [_vm._v(\"Reset\")]\n                      )\n                    ],\n                    1\n                  )\n                ])\n              ]),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"border-light m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                { staticClass: \"pb-2\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Username\" } },\n                    [\n                      _c(\"b-input\", {\n                        staticClass: \"mb-1\",\n                        model: {\n                          value: _vm.userData.username,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData, \"username\", $$v)\n                          },\n                          expression: \"userData.username\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"a\",\n                        {\n                          staticClass: \"small\",\n                          attrs: { href: \"javascript:void(0)\" }\n                        },\n                        [_vm._v(\"Reset password\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Name\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.name,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData, \"name\", $$v)\n                          },\n                          expression: \"userData.name\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Email\" } },\n                    [\n                      _c(\"b-input\", {\n                        staticClass: \"mb-1\",\n                        model: {\n                          value: _vm.userData.email,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData, \"email\", $$v)\n                          },\n                          expression: \"userData.email\"\n                        }\n                      }),\n                      _vm._v(\" \"),\n                      _c(\n                        \"a\",\n                        {\n                          staticClass: \"small\",\n                          attrs: { href: \"javascript:void(0)\" }\n                        },\n                        [_vm._v(\"Resend confirmation\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Company\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.company,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData, \"company\", $$v)\n                          },\n                          expression: \"userData.company\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"border-light m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                { staticClass: \"pb-2\" },\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Role\" } },\n                    [\n                      _c(\"b-select\", {\n                        attrs: {\n                          options: {\n                            1: \"User\",\n                            2: \"Author\",\n                            3: \"Staff\",\n                            4: \"Admin\"\n                          }\n                        },\n                        model: {\n                          value: _vm.userData.role,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData, \"role\", $$v)\n                          },\n                          expression: \"userData.role\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Status\" } },\n                    [\n                      _c(\"b-select\", {\n                        attrs: {\n                          options: { 1: \"Active\", 2: \"Banned\", 3: \"Deleted\" }\n                        },\n                        model: {\n                          value: _vm.userData.status,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData, \"status\", $$v)\n                          },\n                          expression: \"userData.status\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    [\n                      _c(\n                        \"b-check\",\n                        {\n                          model: {\n                            value: _vm.userData.verified,\n                            callback: function($$v) {\n                              _vm.$set(_vm.userData, \"verified\", $$v)\n                            },\n                            expression: \"userData.verified\"\n                          }\n                        },\n                        [_vm._v(\"Verified\")]\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"border-light m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"div\",\n                { staticClass: \"table-responsive\" },\n                [\n                  _c(\"b-table\", {\n                    staticClass: \"card-table m-0\",\n                    attrs: { items: _vm.userData.permissions },\n                    scopedSlots: _vm._u([\n                      {\n                        key: \"read\",\n                        fn: function(data) {\n                          return [\n                            _c(\"b-check\", {\n                              staticClass: \"px-2 m-0\",\n                              model: {\n                                value: data.item.read,\n                                callback: function($$v) {\n                                  _vm.$set(data.item, \"read\", $$v)\n                                },\n                                expression: \"data.item.read\"\n                              }\n                            })\n                          ]\n                        }\n                      },\n                      {\n                        key: \"write\",\n                        fn: function(data) {\n                          return [\n                            _c(\"b-check\", {\n                              staticClass: \"px-2 m-0\",\n                              model: {\n                                value: data.item.write,\n                                callback: function($$v) {\n                                  _vm.$set(data.item, \"write\", $$v)\n                                },\n                                expression: \"data.item.write\"\n                              }\n                            })\n                          ]\n                        }\n                      },\n                      {\n                        key: \"create\",\n                        fn: function(data) {\n                          return [\n                            _c(\"b-check\", {\n                              staticClass: \"px-2 m-0\",\n                              model: {\n                                value: data.item.create,\n                                callback: function($$v) {\n                                  _vm.$set(data.item, \"create\", $$v)\n                                },\n                                expression: \"data.item.create\"\n                              }\n                            })\n                          ]\n                        }\n                      },\n                      {\n                        key: \"delete\",\n                        fn: function(data) {\n                          return [\n                            _c(\"b-check\", {\n                              staticClass: \"px-2 m-0\",\n                              model: {\n                                value: data.item.delete,\n                                callback: function($$v) {\n                                  _vm.$set(data.item, \"delete\", $$v)\n                                },\n                                expression: \"data.item.delete\"\n                              }\n                            })\n                          ]\n                        }\n                      }\n                    ])\n                  })\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Information\" } },\n            [\n              _c(\n                \"b-card-body\",\n                { staticClass: \"pb-2\" },\n                [\n                  _c(\"h6\", { staticClass: \"mb-4\" }, [_vm._v(\"Social links\")]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Twitter\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.twitter,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"twitter\", $$v)\n                          },\n                          expression: \"userData.info.twitter\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Facebook\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.facebook,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"facebook\", $$v)\n                          },\n                          expression: \"userData.info.facebook\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Google+\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.google,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"google\", $$v)\n                          },\n                          expression: \"userData.info.google\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"LinkedIn\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.linkedin,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"linkedin\", $$v)\n                          },\n                          expression: \"userData.info.linkedin\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Instagram\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.instagram,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"instagram\", $$v)\n                          },\n                          expression: \"userData.info.instagram\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"border-light m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                { staticClass: \"pb-2\" },\n                [\n                  _c(\"h6\", { staticClass: \"mb-4\" }, [_vm._v(\"Personal info\")]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Birthday\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.birthday,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"birthday\", $$v)\n                          },\n                          expression: \"userData.info.birthday\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Country\" } },\n                    [\n                      _c(\"b-select\", {\n                        attrs: {\n                          options: [\"USA\", \"Canada\", \"UK\", \"Germany\", \"France\"]\n                        },\n                        model: {\n                          value: _vm.userData.info.country,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"country\", $$v)\n                          },\n                          expression: \"userData.info.country\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Languages\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          options: [\"English\", \"German\", \"French\"]\n                        },\n                        model: {\n                          value: _vm.userData.info.languages,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"languages\", $$v)\n                          },\n                          expression: \"userData.info.languages\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"border-light m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                { staticClass: \"pb-2\" },\n                [\n                  _c(\"h6\", { staticClass: \"mb-4\" }, [_vm._v(\"Contacts\")]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Phone\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.phone,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"phone\", $$v)\n                          },\n                          expression: \"userData.info.phone\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Website\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.userData.info.website,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"website\", $$v)\n                          },\n                          expression: \"userData.info.website\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"border-light m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                { staticClass: \"pb-2\" },\n                [\n                  _c(\"h6\", { staticClass: \"mb-4\" }, [_vm._v(\"Interests\")]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Favorite music\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          taggable: true,\n                          options: [],\n                          placeholder: \"Add tag\"\n                        },\n                        on: { tag: _vm.addMusicTag },\n                        model: {\n                          value: _vm.userData.info.music,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"music\", $$v)\n                          },\n                          expression: \"userData.info.music\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Favorite movies\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          taggable: true,\n                          options: [],\n                          placeholder: \"Add tag\"\n                        },\n                        on: { tag: _vm.addMovieTag },\n                        model: {\n                          value: _vm.userData.info.movies,\n                          callback: function($$v) {\n                            _vm.$set(_vm.userData.info, \"movies\", $$v)\n                          },\n                          expression: \"userData.info.movies\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"text-right mt-3\" },\n        [\n          _c(\"b-btn\", { attrs: { variant: \"primary\" } }, [\n            _vm._v(\"Save changes\")\n          ]),\n          _vm._v(\"Â \\n    \"),\n          _c(\"b-btn\", { attrs: { variant: \"default\" } }, [_vm._v(\"Cancel\")])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}