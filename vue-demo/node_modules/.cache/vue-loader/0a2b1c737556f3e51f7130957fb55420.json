{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/cui-components/CuiVueGallery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/cui-components/CuiVueGallery.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueGallery from 'vue-gallery'\n\nexport default {\n  components: {\n    gallery: VueGallery\n  },\n  data: () => ({\n    index: null,\n    images: [\n      {\n        url: 'img/bg/1.jpg',\n        title: 'Image 1',\n        altText: 'Image 1'\n      },\n      {\n        url: 'img/bg/2.jpg',\n        title: 'Image 2',\n        altText: 'Image 2'\n      },\n      {\n        url: 'img/bg/3.jpg',\n        title: 'Image 3',\n        altText: 'Image 3'\n      },\n      {\n        url: 'img/bg/4.jpg',\n        title: 'Image 4',\n        altText: 'Image 4'\n      }\n    ],\n    options: {\n      // =======================================================================\n      // RTL-only fix: Disable touch events and fix positioning\n      //\n      onopen: function () {\n        if (document.documentElement.getAttribute('dir') !== 'rtl' &&\n               document.body.getAttribute('dir') !== 'rtl') return\n\n        const prototype = Object.getPrototypeOf(this)\n        const galleryTranslateX = prototype.translateX\n\n        prototype.translateX = function (index, x, speed) {\n          x = this.touchStart && this.touchStart.x ? x : -1 * x\n          galleryTranslateX.call(this, index, x, 0, speed)\n        }\n\n        prototype.positionSlide = function (index) {\n          const slide = this.slides[index]\n          slide.style.width = this.slideWidth + 'px'\n          if (this.support.transform) {\n            slide.style.right = index * -this.slideWidth + 'px'\n            this.move(\n              index,\n              this.index > index\n                ? -this.slideWidth\n                : this.index < index ? this.slideWidth : 0,\n              0\n            )\n          }\n        }\n\n        prototype.ontouchstart = function () {}\n        prototype.ontouchmove = function () {}\n        prototype.ontouchend = function () {}\n        prototype.ontouchcancel = function () {}\n      }\n      // END ===================================================================\n    }\n  }),\n  computed: {\n    imageLinks () {\n      return this.images.map(img => this.baseUrl + img.url)\n    }\n  }\n}\n",{"version":3,"sources":["CuiVueGallery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CuiVueGallery.vue","sourceRoot":"src/cui-components","sourcesContent":["<template>\n  <div class=\"ui-block\">\n    <h3 class=\"ui-block-heading\">vue-gallery</h3>\n    <a target=\"_blank\" href=\"https://github.com/RobinCK/vue-gallery\" class=\"ui-block-description\">https://github.com/RobinCK/vue-gallery</a>\n\n    <div class=\"alert alert-warning rtl-only mt-5\">\n      <strong>vue-gallery</strong> does not support touch events and slide animation in RTL mode.\n    </div>\n\n    <h4 class=\"ui-block-heading\">Examples</h4>\n\n    <div class=\"cui-example\">\n      <gallery ref=\"gallery\" :images=\"imageLinks\" :index=\"index\" @close=\"index = null\" :options=\"options\"></gallery>\n\n      <div class=\"row\">\n        <div class=\"col-md-3\" v-for=\"(image, i) in images\" :key=\"i\">\n          <a @click=\"index = i\" :title=\"image.title\" class=\"img-thumbnail\" href=\"javascript:void(0)\">\n            <img :src=\"baseUrl + image.url\" class=\"img-fluid\" :alt=\"image.altText\">\n          </a>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style src=\"@/vendor/libs/vue-gallery/vue-gallery.scss\" lang=\"scss\"></style>\n\n<script>\nimport VueGallery from 'vue-gallery'\n\nexport default {\n  components: {\n    gallery: VueGallery\n  },\n  data: () => ({\n    index: null,\n    images: [\n      {\n        url: 'img/bg/1.jpg',\n        title: 'Image 1',\n        altText: 'Image 1'\n      },\n      {\n        url: 'img/bg/2.jpg',\n        title: 'Image 2',\n        altText: 'Image 2'\n      },\n      {\n        url: 'img/bg/3.jpg',\n        title: 'Image 3',\n        altText: 'Image 3'\n      },\n      {\n        url: 'img/bg/4.jpg',\n        title: 'Image 4',\n        altText: 'Image 4'\n      }\n    ],\n    options: {\n      // =======================================================================\n      // RTL-only fix: Disable touch events and fix positioning\n      //\n      onopen: function () {\n        if (document.documentElement.getAttribute('dir') !== 'rtl' &&\n               document.body.getAttribute('dir') !== 'rtl') return\n\n        const prototype = Object.getPrototypeOf(this)\n        const galleryTranslateX = prototype.translateX\n\n        prototype.translateX = function (index, x, speed) {\n          x = this.touchStart && this.touchStart.x ? x : -1 * x\n          galleryTranslateX.call(this, index, x, 0, speed)\n        }\n\n        prototype.positionSlide = function (index) {\n          const slide = this.slides[index]\n          slide.style.width = this.slideWidth + 'px'\n          if (this.support.transform) {\n            slide.style.right = index * -this.slideWidth + 'px'\n            this.move(\n              index,\n              this.index > index\n                ? -this.slideWidth\n                : this.index < index ? this.slideWidth : 0,\n              0\n            )\n          }\n        }\n\n        prototype.ontouchstart = function () {}\n        prototype.ontouchmove = function () {}\n        prototype.ontouchend = function () {}\n        prototype.ontouchcancel = function () {}\n      }\n      // END ===================================================================\n    }\n  }),\n  computed: {\n    imageLinks () {\n      return this.images.map(img => this.baseUrl + img.url)\n    }\n  }\n}\n</script>\n"]}]}