{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/cui-components/CuiVueTables2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/cui-components/CuiVueTables2.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { ClientTable } from 'vue-tables-2'\n\nVue.use(ClientTable)\n\nexport default {\n  data: () => ({\n    tableData: [],\n    columns: ['first_name', 'last_name', 'gender', 'company', 'edit'],\n    options: {\n      pagination: { chunk: 5 },\n      sortIcon: {\n        is: 'fa-sort',\n        base: 'fas',\n        up: 'fa-sort-up',\n        down: 'fa-sort-down'\n      }\n    }\n  }),\n  created () {\n    // Fetch json data\n    const req = new XMLHttpRequest()\n    req.open('GET', `${this.baseUrl}json/table-data.json`)\n\n    req.onload = () => {\n      const data = JSON.parse(req.response)\n\n      // Add IDs for child rows functionality\n      this.tableData = data.map((item, index) => {\n        item['id'] = index\n        return item\n      })\n    }\n\n    req.send()\n  },\n  methods: {\n    edit (row) {\n      alert(`Edit: ${row.first_name} ${row.last_name}`)\n    },\n    remove (row) {\n      alert(`Remove: ${row.first_name} ${row.last_name}`)\n    }\n  }\n}\n",{"version":3,"sources":["CuiVueTables2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CuiVueTables2.vue","sourceRoot":"src/cui-components","sourcesContent":["<template>\n  <div class=\"ui-block\">\n    <h3 class=\"ui-block-heading\">vue-tables-2</h3>\n    <a target=\"_blank\" href=\"https://github.com/matfish2/vue-tables-2\" class=\"ui-block-description\">https://github.com/matfish2/vue-tables-2</a>\n\n    <h4 class=\"ui-block-heading\">Examples</h4>\n\n    <div class=\"cui-example\">\n      <v-client-table :data=\"tableData\" :columns=\"columns\" :options=\"options\">\n        <template slot=\"edit\" slot-scope=\"props\">\n          <div>\n            <b-btn variant=\"outline-success borderless icon-btn\" class=\"btn-xs\" @click.prevent=\"edit(props.row)\"><i class=\"ion ion-md-create\"></i></b-btn>\n            <b-btn variant=\"outline-danger borderless icon-btn\" class=\"btn-xs\" @click.prevent=\"remove(props.row)\"><i class=\"ion ion-md-close\"></i></b-btn>\n          </div>\n        </template>\n        <template slot=\"child_row\" slot-scope=\"props\">\n          <div><b>First name:</b> {{props.row.first_name}}</div>\n          <div><b>Last name:</b> {{props.row.last_name}}</div>\n        </template>\n      </v-client-table>\n    </div>\n  </div>\n</template>\n\n<style src=\"@/vendor/libs/vue-data-tables/vue-data-tables.scss\" lang=\"scss\"></style>\n\n<script>\nimport Vue from 'vue'\nimport { ClientTable } from 'vue-tables-2'\n\nVue.use(ClientTable)\n\nexport default {\n  data: () => ({\n    tableData: [],\n    columns: ['first_name', 'last_name', 'gender', 'company', 'edit'],\n    options: {\n      pagination: { chunk: 5 },\n      sortIcon: {\n        is: 'fa-sort',\n        base: 'fas',\n        up: 'fa-sort-up',\n        down: 'fa-sort-down'\n      }\n    }\n  }),\n  created () {\n    // Fetch json data\n    const req = new XMLHttpRequest()\n    req.open('GET', `${this.baseUrl}json/table-data.json`)\n\n    req.onload = () => {\n      const data = JSON.parse(req.response)\n\n      // Add IDs for child rows functionality\n      this.tableData = data.map((item, index) => {\n        item['id'] = index\n        return item\n      })\n    }\n\n    req.send()\n  },\n  methods: {\n    edit (row) {\n      alert(`Edit: ${row.first_name} ${row.last_name}`)\n    },\n    remove (row) {\n      alert(`Remove: ${row.first_name} ${row.last_name}`)\n    }\n  }\n}\n</script>\n"]}]}