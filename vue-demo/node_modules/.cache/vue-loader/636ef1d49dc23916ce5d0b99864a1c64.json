{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/KanbanBoard.vue?vue&type=template&id=140c8624&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/KanbanBoard.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"h4\", { staticClass: \"font-weight-bold py-3 mb-4\" }, [\n      _vm._v(\"\\n    Kanban board\\n  \")\n    ]),\n    _vm._v(\" \"),\n    _c(\"div\", { staticClass: \"form-row\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"col-md\" },\n        [\n          _c(\n            \"b-card\",\n            { staticClass: \"mb-3\", attrs: { \"no-body\": \"\" } },\n            [\n              _c(\n                \"b-card-header\",\n                { staticClass: \"text-center\", attrs: { \"header-tag\": \"h6\" } },\n                [_vm._v(\"New\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"draggable\",\n                {\n                  staticClass: \"kanban-box px-2 pt-2\",\n                  attrs: { options: _vm.draggableOptions },\n                  model: {\n                    value: _vm.newTasks,\n                    callback: function($$v) {\n                      _vm.newTasks = $$v\n                    },\n                    expression: \"newTasks\"\n                  }\n                },\n                _vm._l(_vm.newTasks, function(task) {\n                  return _c(\n                    \"div\",\n                    { key: task.text, staticClass: \"ui-bordered p-2 mb-2\" },\n                    [\n                      _c(\n                        \"b-dropdown\",\n                        {\n                          staticClass: \"kanban-board-actions float-right ml-2\",\n                          attrs: {\n                            variant:\n                              \"default btn-xs btn-round icon-btn borderless md-btn-flat hide-arrow\",\n                            right: !_vm.isRTL\n                          }\n                        },\n                        [\n                          _c(\"template\", { slot: \"button-content\" }, [\n                            _c(\"i\", { staticClass: \"ion ion-ios-more\" })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Edit\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Remove\")]\n                          )\n                        ],\n                        2\n                      ),\n                      _vm._v(\n                        \"\\n            \" + _vm._s(task.text) + \"\\n            \"\n                      ),\n                      task.tags && task.tags.length\n                        ? _c(\n                            \"span\",\n                            _vm._l(task.tags, function(tag) {\n                              return _c(\n                                \"span\",\n                                {\n                                  key: tag,\n                                  staticClass: \"badge ml-1\",\n                                  class: \"badge-\" + _vm.tags[tag].color\n                                },\n                                [_vm._v(_vm._s(_vm.tags[tag].title))]\n                              )\n                            }),\n                            0\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                }),\n                0\n              ),\n              _vm._v(\" \"),\n              _c(\"b-card-footer\", { staticClass: \"text-center py-2\" }, [\n                _c(\"a\", { attrs: { href: \"javascript:void(0)\" } }, [\n                  _c(\"i\", { staticClass: \"ion ion-md-add\" }),\n                  _vm._v(\"Â  Add task\")\n                ])\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"col-md\" },\n        [\n          _c(\n            \"b-card\",\n            {\n              staticClass: \"mb-3\",\n              attrs: { \"no-body\": \"\", \"border-variant\": \"info\" }\n            },\n            [\n              _c(\n                \"b-card-header\",\n                {\n                  staticClass: \"text-center\",\n                  attrs: { \"header-tag\": \"h6\", \"header-text-variant\": \"info\" }\n                },\n                [_vm._v(\"In progress\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"draggable\",\n                {\n                  staticClass: \"kanban-box px-2 pt-2\",\n                  attrs: { options: _vm.draggableOptions },\n                  model: {\n                    value: _vm.inProgressTasks,\n                    callback: function($$v) {\n                      _vm.inProgressTasks = $$v\n                    },\n                    expression: \"inProgressTasks\"\n                  }\n                },\n                _vm._l(_vm.inProgressTasks, function(task) {\n                  return _c(\n                    \"div\",\n                    { key: task.text, staticClass: \"ui-bordered p-2 mb-2\" },\n                    [\n                      _c(\n                        \"b-dropdown\",\n                        {\n                          staticClass: \"kanban-board-actions float-right ml-2\",\n                          attrs: {\n                            variant:\n                              \"default btn-xs btn-round icon-btn borderless md-btn-flat hide-arrow\",\n                            right: !_vm.isRTL\n                          }\n                        },\n                        [\n                          _c(\"template\", { slot: \"button-content\" }, [\n                            _c(\"i\", { staticClass: \"ion ion-ios-more\" })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Edit\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Remove\")]\n                          )\n                        ],\n                        2\n                      ),\n                      _vm._v(\n                        \"\\n            \" + _vm._s(task.text) + \"\\n            \"\n                      ),\n                      task.tags && task.tags.length\n                        ? _c(\n                            \"span\",\n                            _vm._l(task.tags, function(tag) {\n                              return _c(\n                                \"span\",\n                                {\n                                  key: tag,\n                                  staticClass: \"badge ml-1\",\n                                  class: \"badge-\" + _vm.tags[tag].color\n                                },\n                                [_vm._v(_vm._s(_vm.tags[tag].title))]\n                              )\n                            }),\n                            0\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"col-md\" },\n        [\n          _c(\n            \"b-card\",\n            {\n              staticClass: \"mb-3\",\n              attrs: { \"no-body\": \"\", \"border-variant\": \"warning\" }\n            },\n            [\n              _c(\n                \"b-card-header\",\n                {\n                  staticClass: \"text-center\",\n                  attrs: {\n                    \"header-tag\": \"h6\",\n                    \"header-text-variant\": \"warning\"\n                  }\n                },\n                [_vm._v(\"Test\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"draggable\",\n                {\n                  staticClass: \"kanban-box px-2 pt-2\",\n                  attrs: { options: _vm.draggableOptions },\n                  model: {\n                    value: _vm.testTasks,\n                    callback: function($$v) {\n                      _vm.testTasks = $$v\n                    },\n                    expression: \"testTasks\"\n                  }\n                },\n                _vm._l(_vm.testTasks, function(task) {\n                  return _c(\n                    \"div\",\n                    { key: task.text, staticClass: \"ui-bordered p-2 mb-2\" },\n                    [\n                      _c(\n                        \"b-dropdown\",\n                        {\n                          staticClass: \"kanban-board-actions float-right ml-2\",\n                          attrs: {\n                            variant:\n                              \"default btn-xs btn-round icon-btn borderless md-btn-flat hide-arrow\",\n                            right: !_vm.isRTL\n                          }\n                        },\n                        [\n                          _c(\"template\", { slot: \"button-content\" }, [\n                            _c(\"i\", { staticClass: \"ion ion-ios-more\" })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Edit\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Remove\")]\n                          )\n                        ],\n                        2\n                      ),\n                      _vm._v(\n                        \"\\n            \" + _vm._s(task.text) + \"\\n            \"\n                      ),\n                      task.tags && task.tags.length\n                        ? _c(\n                            \"span\",\n                            _vm._l(task.tags, function(tag) {\n                              return _c(\n                                \"span\",\n                                {\n                                  key: tag,\n                                  staticClass: \"badge ml-1\",\n                                  class: \"badge-\" + _vm.tags[tag].color\n                                },\n                                [_vm._v(_vm._s(_vm.tags[tag].title))]\n                              )\n                            }),\n                            0\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"col-md\" },\n        [\n          _c(\n            \"b-card\",\n            {\n              staticClass: \"mb-3\",\n              attrs: { \"no-body\": \"\", \"border-variant\": \"success\" }\n            },\n            [\n              _c(\n                \"b-card-header\",\n                {\n                  staticClass: \"text-center\",\n                  attrs: {\n                    \"header-tag\": \"h6\",\n                    \"header-text-variant\": \"success\"\n                  }\n                },\n                [_vm._v(\"Done\")]\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"draggable\",\n                {\n                  staticClass: \"kanban-box px-2 pt-2\",\n                  attrs: { options: _vm.draggableOptions },\n                  model: {\n                    value: _vm.doneTasks,\n                    callback: function($$v) {\n                      _vm.doneTasks = $$v\n                    },\n                    expression: \"doneTasks\"\n                  }\n                },\n                _vm._l(_vm.doneTasks, function(task) {\n                  return _c(\n                    \"div\",\n                    { key: task.text, staticClass: \"ui-bordered p-2 mb-2\" },\n                    [\n                      _c(\n                        \"b-dropdown\",\n                        {\n                          staticClass: \"kanban-board-actions float-right ml-2\",\n                          attrs: {\n                            variant:\n                              \"default btn-xs btn-round icon-btn borderless md-btn-flat hide-arrow\",\n                            right: !_vm.isRTL\n                          }\n                        },\n                        [\n                          _c(\"template\", { slot: \"button-content\" }, [\n                            _c(\"i\", { staticClass: \"ion ion-ios-more\" })\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Edit\")]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-dropdown-item\",\n                            { attrs: { href: \"javascript:void(0)\" } },\n                            [_vm._v(\"Remove\")]\n                          )\n                        ],\n                        2\n                      ),\n                      _vm._v(\n                        \"\\n            \" + _vm._s(task.text) + \"\\n            \"\n                      ),\n                      task.tags && task.tags.length\n                        ? _c(\n                            \"span\",\n                            _vm._l(task.tags, function(tag) {\n                              return _c(\n                                \"span\",\n                                {\n                                  key: tag,\n                                  staticClass: \"badge ml-1\",\n                                  class: \"badge-\" + _vm.tags[tag].color\n                                },\n                                [_vm._v(_vm._s(_vm.tags[tag].title))]\n                              )\n                            }),\n                            0\n                          )\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                }),\n                0\n              ),\n              _vm._v(\" \"),\n              _c(\"b-card-footer\", { staticClass: \"text-center py-2\" }, [\n                _c(\"a\", { attrs: { href: \"javascript:void(0)\" } }, [\n                  _c(\"i\", { staticClass: \"ion ion-md-close\" }),\n                  _vm._v(\"Â  Clear completed tasks\")\n                ])\n              ])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ])\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}