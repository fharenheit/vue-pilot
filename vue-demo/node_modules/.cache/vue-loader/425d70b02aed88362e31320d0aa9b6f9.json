{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/ECommerceProductEdit.vue?vue&type=template&id=4ffaf6b4&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/ECommerceProductEdit.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\"h4\", { staticClass: \"font-weight-bold py-3 mb-4\" }, [\n        _vm._v(\"\\n    Edit product \"),\n        _c(\"span\", { staticClass: \"text-muted\" }, [\n          _vm._v(\"#\" + _vm._s(_vm.productData.id))\n        ])\n      ]),\n      _vm._v(\" \"),\n      _c(\n        \"b-tabs\",\n        { staticClass: \"nav-tabs-top nav-responsive-sm\" },\n        [\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Basic info\", active: \"\" } },\n            [\n              _c(\n                \"b-card-body\",\n                [\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Title\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.productData.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData, \"title\", $$v)\n                          },\n                          expression: \"productData.title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Price\" } },\n                    [\n                      _c(\n                        \"b-input-group\",\n                        { attrs: { prepend: \"$\" } },\n                        [\n                          _c(\"b-input\", {\n                            model: {\n                              value: _vm.productData.price,\n                              callback: function($$v) {\n                                _vm.$set(_vm.productData, \"price\", $$v)\n                              },\n                              expression: \"productData.price\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Items in stock\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.productData.in_stock,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData, \"in_stock\", $$v)\n                          },\n                          expression: \"productData.in_stock\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Tax\" } },\n                    [\n                      _c(\n                        \"b-input-group\",\n                        { attrs: { append: \"%\" } },\n                        [\n                          _c(\"b-input\", {\n                            model: {\n                              value: _vm.productData.tax,\n                              callback: function($$v) {\n                                _vm.$set(_vm.productData, \"tax\", $$v)\n                              },\n                              expression: \"productData.tax\"\n                            }\n                          })\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Status\" } },\n                    [\n                      _c(\"b-select\", {\n                        attrs: {\n                          options: {\n                            1: \"Published\",\n                            2: \"Out of stock\",\n                            3: \"Pending\",\n                            4: \"Hidden\"\n                          }\n                        },\n                        model: {\n                          value: _vm.productData.status,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData, \"status\", $$v)\n                          },\n                          expression: \"productData.status\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Category\" } },\n                    [\n                      _c(\"b-select\", {\n                        attrs: {\n                          options: [\n                            \"Computers\",\n                            \"Portable tech\",\n                            \"Mobile phones\",\n                            \"Audio\",\n                            \"Photo and video\",\n                            \"Video game consoles\"\n                          ]\n                        },\n                        model: {\n                          value: _vm.productData.category,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData, \"category\", $$v)\n                          },\n                          expression: \"productData.category\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                [\n                  _c(\"h6\", { staticClass: \"small font-weight-semibold mb-4\" }, [\n                    _vm._v(\"Options \"),\n                    _c(\n                      \"span\",\n                      { staticClass: \"text-muted font-weight-normal\" },\n                      [_vm._v(\"(depending on category)\")]\n                    )\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Brand\" } },\n                    [\n                      _c(\"b-select\", {\n                        attrs: {\n                          options: [\n                            \"Apple\",\n                            \"Blueberry\",\n                            \"Samsung\",\n                            \"LG\",\n                            \"Asus\",\n                            \"Sony\",\n                            \"Honor\",\n                            \"Huawei\",\n                            \"Xiaomi\"\n                          ]\n                        },\n                        model: {\n                          value: _vm.productData.options.brand,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.options, \"brand\", $$v)\n                          },\n                          expression: \"productData.options.brand\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Storages\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          options: [\"8GB\", \"16GB\", \"32GB\", \"64GB\", \"128GB\"]\n                        },\n                        model: {\n                          value: _vm.productData.options.storages,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.options, \"storages\", $$v)\n                          },\n                          expression: \"productData.options.storages\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Colors\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          trackBy: \"1\",\n                          options: [\n                            [\"Black\", \"#000\"],\n                            [\"White\", \"#fff\"],\n                            [\"Silver\", \"silver\"],\n                            [\"Gray\", \"gray\"],\n                            [\"Green\", \"#5f9ea0\"],\n                            [\"Gold\", \"#c5baab\"],\n                            [\"Pink\", \"pink\"],\n                            [\"Red\", \"red\"]\n                          ]\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"option\",\n                            fn: function(props) {\n                              return [\n                                _c(\"span\", {\n                                  staticClass: \"ui-product-color align-middle\",\n                                  style: { background: props.option[1] }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"span\", { staticClass: \"align-middle\" }, [\n                                  _vm._v(_vm._s(props.option[0]))\n                                ])\n                              ]\n                            }\n                          },\n                          {\n                            key: \"tag\",\n                            fn: function(props) {\n                              return [\n                                _c(\n                                  \"span\",\n                                  { staticClass: \"multiselect__tag\" },\n                                  [\n                                    _c(\"span\", {\n                                      staticClass: \"badge badge-dot\",\n                                      style: { background: props.option[1] }\n                                    }),\n                                    _vm._v(\n                                      \"  \" +\n                                        _vm._s(props.option[0]) +\n                                        \"\\n                \"\n                                    ),\n                                    _c(\"i\", {\n                                      staticClass: \"multiselect__tag-icon\",\n                                      on: {\n                                        click: function($event) {\n                                          props.remove(props.option)\n                                        }\n                                      }\n                                    })\n                                  ]\n                                )\n                              ]\n                            }\n                          }\n                        ]),\n                        model: {\n                          value: _vm.productData.options.colors,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.options, \"colors\", $$v)\n                          },\n                          expression: \"productData.options.colors\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Warranties\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          options: [\n                            \"Standard - 1 year\",\n                            \"Extended - 2 years | $99\"\n                          ]\n                        },\n                        model: {\n                          value: _vm.productData.options.warranties,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.options, \"warranties\", $$v)\n                          },\n                          expression: \"productData.options.warranties\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Ships from\" } },\n                    [\n                      _c(\"multiselect\", {\n                        attrs: {\n                          multiple: true,\n                          options: [\"USA\", \"China\", \"France\", \"Germany\", \"UK\"]\n                        },\n                        model: {\n                          value: _vm.productData.options.ships_from,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.options, \"ships_from\", $$v)\n                          },\n                          expression: \"productData.options.ships_from\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\"hr\", { staticClass: \"m-0\" }),\n              _vm._v(\" \"),\n              _c(\n                \"b-card-body\",\n                [\n                  _c(\"h6\", { staticClass: \"small font-weight-semibold mb-4\" }, [\n                    _vm._v(\"Meta\")\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Title\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.productData.meta.title,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.meta, \"title\", $$v)\n                          },\n                          expression: \"productData.meta.title\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Description\" } },\n                    [\n                      _c(\"b-textarea\", {\n                        attrs: { rows: 3 },\n                        model: {\n                          value: _vm.productData.meta.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.meta, \"description\", $$v)\n                          },\n                          expression: \"productData.meta.description\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-form-group\",\n                    { attrs: { label: \"Keywords\" } },\n                    [\n                      _c(\"b-input\", {\n                        model: {\n                          value: _vm.productData.meta.keywords,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData.meta, \"keywords\", $$v)\n                          },\n                          expression: \"productData.meta.keywords\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Description\" } },\n            [\n              _c(\n                \"b-card-body\",\n                [\n                  !_vm.isIE10Mode\n                    ? _c(\"quill-editor\", {\n                        attrs: { options: _vm.editorOptions },\n                        model: {\n                          value: _vm.productData.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData, \"description\", $$v)\n                          },\n                          expression: \"productData.description\"\n                        }\n                      })\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _vm.isIE10Mode\n                    ? _c(\"b-textarea\", {\n                        staticStyle: { height: \"600px\" },\n                        model: {\n                          value: _vm.productData.description,\n                          callback: function($$v) {\n                            _vm.$set(_vm.productData, \"description\", $$v)\n                          },\n                          expression: \"productData.description\"\n                        }\n                      })\n                    : _vm._e()\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Discounts\" } },\n            [\n              _c(\n                \"b-card-body\",\n                [\n                  _c(\n                    \"div\",\n                    { staticClass: \"table-responsive\" },\n                    [\n                      _c(\"b-table\", {\n                        staticClass: \"product-item-discounts-table\",\n                        attrs: {\n                          items: _vm.productData.discounts,\n                          fields: [\n                            \"type\",\n                            \"code\",\n                            \"quantity\",\n                            \"start_date\",\n                            \"end_date\",\n                            { key: \"actions\", label: \" \" }\n                          ]\n                        },\n                        scopedSlots: _vm._u([\n                          {\n                            key: \"discount\",\n                            fn: function(data) {\n                              return [\n                                _c(\n                                  \"b-input-group\",\n                                  [\n                                    _c(\"b-input\", {\n                                      model: {\n                                        value: data.item.discount,\n                                        callback: function($$v) {\n                                          _vm.$set(data.item, \"discount\", $$v)\n                                        },\n                                        expression: \"data.item.discount\"\n                                      }\n                                    })\n                                  ],\n                                  1\n                                )\n                              ]\n                            }\n                          },\n                          {\n                            key: \"type\",\n                            fn: function(data) {\n                              return [\n                                _c(\"b-select\", {\n                                  attrs: { options: [\"General\", \"Code\"] },\n                                  model: {\n                                    value: data.item.type,\n                                    callback: function($$v) {\n                                      _vm.$set(data.item, \"type\", $$v)\n                                    },\n                                    expression: \"data.item.type\"\n                                  }\n                                })\n                              ]\n                            }\n                          },\n                          {\n                            key: \"code\",\n                            fn: function(data) {\n                              return [\n                                _c(\"b-input\", {\n                                  attrs: {\n                                    disabled: data.item.type !== \"Code\"\n                                  },\n                                  model: {\n                                    value: data.item.code,\n                                    callback: function($$v) {\n                                      _vm.$set(data.item, \"code\", $$v)\n                                    },\n                                    expression: \"data.item.code\"\n                                  }\n                                })\n                              ]\n                            }\n                          },\n                          {\n                            key: \"quantity\",\n                            fn: function(data) {\n                              return [\n                                _c(\"b-input\", {\n                                  model: {\n                                    value: data.item.quantity,\n                                    callback: function($$v) {\n                                      _vm.$set(data.item, \"quantity\", $$v)\n                                    },\n                                    expression: \"data.item.quantity\"\n                                  }\n                                })\n                              ]\n                            }\n                          },\n                          {\n                            key: \"start_date\",\n                            fn: function(data) {\n                              return [\n                                _c(\"flat-pickr\", {\n                                  attrs: {\n                                    config: {\n                                      altInput: true,\n                                      animate: !_vm.isRTL,\n                                      dateFormat: \"m/d/Y\",\n                                      altFormat: \"m/d/Y\"\n                                    },\n                                    placeholder: !_vm.isIEMode\n                                      ? \"Select a start date\"\n                                      : null\n                                  },\n                                  model: {\n                                    value: data.item.start_date,\n                                    callback: function($$v) {\n                                      _vm.$set(data.item, \"start_date\", $$v)\n                                    },\n                                    expression: \"data.item.start_date\"\n                                  }\n                                })\n                              ]\n                            }\n                          },\n                          {\n                            key: \"end_date\",\n                            fn: function(data) {\n                              return [\n                                _c(\"flat-pickr\", {\n                                  attrs: {\n                                    config: {\n                                      altInput: true,\n                                      animate: !_vm.isRTL,\n                                      dateFormat: \"m/d/Y\",\n                                      altFormat: \"m/d/Y\",\n                                      minDate: data.item.start_date\n                                    },\n                                    placeholder: !_vm.isIEMode\n                                      ? \"Select an end date\"\n                                      : null\n                                  },\n                                  model: {\n                                    value: data.item.end_date,\n                                    callback: function($$v) {\n                                      _vm.$set(data.item, \"end_date\", $$v)\n                                    },\n                                    expression: \"data.item.end_date\"\n                                  }\n                                })\n                              ]\n                            }\n                          },\n                          {\n                            key: \"actions\",\n                            fn: function(data) {\n                              return [\n                                _c(\n                                  \"b-btn\",\n                                  {\n                                    attrs: {\n                                      variant: \"default md-btn-flat icon-btn\",\n                                      size: \"sm\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        _vm.productData.discounts.splice(\n                                          data.index,\n                                          1\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [_c(\"i\", { staticClass: \"ion ion-md-close\" })]\n                                )\n                              ]\n                            }\n                          }\n                        ])\n                      })\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-btn\",\n                    {\n                      attrs: { variant: \"outline-primary\" },\n                      on: {\n                        click: function($event) {\n                          _vm.productData.discounts.push({\n                            discount: \"\",\n                            type: \"General\",\n                            code: \"\",\n                            quantity: \"\",\n                            start_date: \"\",\n                            end_date: \"\"\n                          })\n                        }\n                      }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"ion ion-md-add\" }),\n                      _vm._v(\"  Add discount\\n        \")\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-tab\",\n            { attrs: { title: \"Images\" } },\n            [\n              _c(\n                \"b-card-body\",\n                [\n                  _c(\n                    \"draggable\",\n                    {\n                      attrs: { options: _vm.draggableOptions },\n                      model: {\n                        value: _vm.productData.images,\n                        callback: function($$v) {\n                          _vm.$set(_vm.productData, \"images\", $$v)\n                        },\n                        expression: \"productData.images\"\n                      }\n                    },\n                    _vm._l(_vm.productData.images, function(i, index) {\n                      return _c(\n                        \"div\",\n                        {\n                          key: i.image,\n                          staticClass:\n                            \"media align-items-center bg-white ui-bordered py-3 mb-2\"\n                        },\n                        [\n                          _c(\"div\", {\n                            staticClass:\n                              \"product-image-move ion ion-ios-move text-muted text-big p-4\"\n                          }),\n                          _vm._v(\" \"),\n                          _c(\n                            \"a\",\n                            {\n                              staticClass: \"d-block ui-w-100 mr-4\",\n                              attrs: {\n                                href: _vm.baseUrl + \"img/uikit/\" + i.image,\n                                target: \"_blank\"\n                              }\n                            },\n                            [\n                              _c(\"img\", {\n                                staticClass: \"img-fluid\",\n                                attrs: {\n                                  src: _vm.baseUrl + \"img/uikit/\" + i.image,\n                                  alt: \"\"\n                                }\n                              })\n                            ]\n                          ),\n                          _vm._v(\" \"),\n                          _c(\"div\", { staticClass: \"media-body\" }, [\n                            _c(\"input\", {\n                              staticClass:\n                                \"form-control form-control-sm bg-transparent border-light mb-2\",\n                              attrs: { type: \"text\", readonly: \"\" },\n                              domProps: {\n                                value: \"example.com/img/uikit/\" + i.image\n                              }\n                            }),\n                            _vm._v(\" \"),\n                            _c(\n                              \"label\",\n                              { staticClass: \"switcher switcher-sm\" },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"switcher-input\",\n                                  attrs: {\n                                    type: \"radio\",\n                                    name: \"product-primary-image\"\n                                  },\n                                  domProps: { checked: i.primary },\n                                  on: {\n                                    change: function($event) {\n                                      _vm.setPrimaryImage(index)\n                                    }\n                                  }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"span\",\n                                  { staticClass: \"switcher-indicator\" },\n                                  [\n                                    _c(\"span\", { staticClass: \"switcher-yes\" }),\n                                    _vm._v(\" \"),\n                                    _c(\"span\", { staticClass: \"switcher-no\" })\n                                  ]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\"span\", { staticClass: \"switcher-label\" }, [\n                                  _vm._v(\"Primary image\")\n                                ])\n                              ]\n                            )\n                          ]),\n                          _vm._v(\" \"),\n                          _c(\n                            \"b-btn\",\n                            {\n                              staticClass: \"d-block mx-4\",\n                              attrs: {\n                                variant: \"outline-danger borderless icon-btn\"\n                              },\n                              on: {\n                                click: function($event) {\n                                  _vm.productData.images.splice(index, 1)\n                                }\n                              }\n                            },\n                            [_c(\"i\", { staticClass: \"ion ion-md-close\" })]\n                          )\n                        ],\n                        1\n                      )\n                    }),\n                    0\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-btn\",\n                    {\n                      staticClass: \"mt-3\",\n                      attrs: { variant: \"outline-primary\" }\n                    },\n                    [\n                      _c(\"i\", { staticClass: \"ion ion-md-cloud-upload\" }),\n                      _vm._v(\"  Upload images\\n        \")\n                    ]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"text-right mt-3\" },\n        [\n          _c(\"b-btn\", { attrs: { variant: \"default\" } }, [_vm._v(\"Cancel\")]),\n          _vm._v(\"  \\n    \"),\n          _c(\"b-btn\", { attrs: { variant: \"primary\" } }, [\n            _vm._v(\"Save changes\")\n          ])\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}