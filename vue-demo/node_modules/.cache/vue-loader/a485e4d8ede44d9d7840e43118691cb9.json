{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/tables/VueTables2.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/tables/VueTables2.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { ClientTable } from 'vue-tables-2'\n\nVue.use(ClientTable)\n\nexport default {\n  name: 'tables-vue-tables-2',\n  metaInfo: {\n    title: 'Vue Tables 2 - Tables'\n  },\n  data: () => ({\n    tableData: [],\n    columns: ['first_name', 'last_name', 'gender', 'company', 'edit'],\n    options: {\n      pagination: { chunk: 5 },\n      sortIcon: {\n        is: 'fa-sort',\n        base: 'fas',\n        up: 'fa-sort-up',\n        down: 'fa-sort-down'\n      }\n    }\n  }),\n  created () {\n    // Fetch json data\n    const req = new XMLHttpRequest()\n    req.open('GET', `${this.baseUrl}json/table-data.json`)\n\n    req.onload = () => {\n      const data = JSON.parse(req.response)\n\n      // Add IDs for child rows functionality\n      this.tableData = data.map((item, index) => {\n        item['id'] = index\n        return item\n      })\n    }\n\n    req.send()\n  },\n  methods: {\n    edit (row) {\n      alert(`Edit: ${row.first_name} ${row.last_name}`)\n    },\n    remove (row) {\n      alert(`Remove: ${row.first_name} ${row.last_name}`)\n    }\n  }\n}\n",{"version":3,"sources":["VueTables2.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VueTables2.vue","sourceRoot":"src/components/tables","sourcesContent":["<template>\n  <div>\n    <h4 class=\"font-weight-bold py-3 mb-4\">\n      <span class=\"text-muted font-weight-light\">Tables /</span> Vue Tables 2\n    </h4>\n\n    <hr class=\"border-light container-m--x mt-0 mb-5\">\n\n    <v-client-table :data=\"tableData\" :columns=\"columns\" :options=\"options\">\n      <template slot=\"edit\" slot-scope=\"props\">\n        <div>\n          <b-btn variant=\"outline-success borderless icon-btn\" class=\"btn-xs\" @click.prevent=\"edit(props.row)\"><i class=\"ion ion-md-create\"></i></b-btn>\n          <b-btn variant=\"outline-danger borderless icon-btn\" class=\"btn-xs\" @click.prevent=\"remove(props.row)\"><i class=\"ion ion-md-close\"></i></b-btn>\n        </div>\n      </template>\n      <template slot=\"child_row\" slot-scope=\"props\">\n        <div><b>First name:</b> {{props.row.first_name}}</div>\n        <div><b>Last name:</b> {{props.row.last_name}}</div>\n      </template>\n    </v-client-table>\n  </div>\n</template>\n\n<style src=\"@/vendor/libs/vue-data-tables/vue-data-tables.scss\" lang=\"scss\"></style>\n\n<script>\nimport Vue from 'vue'\nimport { ClientTable } from 'vue-tables-2'\n\nVue.use(ClientTable)\n\nexport default {\n  name: 'tables-vue-tables-2',\n  metaInfo: {\n    title: 'Vue Tables 2 - Tables'\n  },\n  data: () => ({\n    tableData: [],\n    columns: ['first_name', 'last_name', 'gender', 'company', 'edit'],\n    options: {\n      pagination: { chunk: 5 },\n      sortIcon: {\n        is: 'fa-sort',\n        base: 'fas',\n        up: 'fa-sort-up',\n        down: 'fa-sort-down'\n      }\n    }\n  }),\n  created () {\n    // Fetch json data\n    const req = new XMLHttpRequest()\n    req.open('GET', `${this.baseUrl}json/table-data.json`)\n\n    req.onload = () => {\n      const data = JSON.parse(req.response)\n\n      // Add IDs for child rows functionality\n      this.tableData = data.map((item, index) => {\n        item['id'] = index\n        return item\n      })\n    }\n\n    req.send()\n  },\n  methods: {\n    edit (row) {\n      alert(`Edit: ${row.first_name} ${row.last_name}`)\n    },\n    remove (row) {\n      alert(`Remove: ${row.first_name} ${row.last_name}`)\n    }\n  }\n}\n</script>\n"]}]}