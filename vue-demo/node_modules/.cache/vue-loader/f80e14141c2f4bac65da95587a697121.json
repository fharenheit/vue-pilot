{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/Gallery.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/Gallery.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue'\nimport { VueMasonryPlugin } from 'vue-masonry/index.js'\nimport VueGallery from 'vue-gallery'\n\nVue.use(VueMasonryPlugin)\n\nexport default {\n  name: 'pages-gallery',\n  metaInfo: {\n    title: 'Gallery - Pages'\n  },\n  components: {\n    gallery: VueGallery\n  },\n  data: () => ({\n    curTag: 'all',\n    galleryIndex: null,\n    originalGalleryImages: [\n      { url: 'img/bg/1.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/2.jpg', altText: '', tag: 'car' },\n      { url: 'img/bg/3.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/4.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/5.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/6.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/7.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/8.jpg', altText: '', tag: 'car' },\n      { url: 'img/bg/9.jpg', altText: '', tag: 'animal' },\n      { url: 'img/bg/10.jpg', altText: '', tag: 'animal' },\n      { url: 'img/bg/11.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/12.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/13.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/14.jpg', altText: '', tag: 'animal' },\n      { url: 'img/bg/15.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/16.jpg', altText: '', tag: 'other' }\n    ],\n    galleryOptions: {\n      // =======================================================================\n      // RTL-only fix: Disable touch events and fix positioning\n      //\n      onopen: function () {\n        if (document.documentElement.getAttribute('dir') !== 'rtl' &&\n               document.body.getAttribute('dir') !== 'rtl') return\n\n        const prototype = Object.getPrototypeOf(this)\n        const galleryTranslateX = prototype.translateX\n\n        prototype.translateX = function (index, x, speed) {\n          x = this.touchStart && this.touchStart.x ? x : -1 * x\n          galleryTranslateX.call(this, index, x, 0, speed)\n        }\n\n        prototype.positionSlide = function (index) {\n          const slide = this.slides[index]\n          slide.style.width = this.slideWidth + 'px'\n          if (this.support.transform) {\n            slide.style.right = index * -this.slideWidth + 'px'\n            this.move(\n              index,\n              this.index > index\n                ? -this.slideWidth\n                : this.index < index ? this.slideWidth : 0,\n              0\n            )\n          }\n        }\n\n        prototype.ontouchstart = function () {}\n        prototype.ontouchmove = function () {}\n        prototype.ontouchend = function () {}\n        prototype.ontouchcancel = function () {}\n      }\n      // END ===================================================================\n    }\n  }),\n  computed: {\n    galleryImages () {\n      const images = this.curTag === 'all'\n        ? this.originalGalleryImages\n        : this.originalGalleryImages.filter(img => img.tag === this.curTag)\n\n      return images.map(img => {\n        return Object.assign({}, img, { url: this.baseUrl + img.url })\n      })\n    },\n\n    galleryImageLinks () {\n      return this.galleryImages.map(img => img.url)\n    }\n  }\n}\n",{"version":3,"sources":["Gallery.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Gallery.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <div>\n    <h4 class=\"font-weight-bold py-3 mb-4\">\n      Gallery\n    </h4>\n\n    <ul class=\"nav nav-tabs tabs-alt mb-4\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" @click.prevent=\"curTag ='all'\" :class=\"{active: curTag=='all'}\" href=\"#\">All</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" @click.prevent=\"curTag ='nature'\" :class=\"{active: curTag=='nature'}\" href=\"#\">Nature</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" @click.prevent=\"curTag ='car'\" :class=\"{active: curTag=='car'}\" href=\"#\">Cars</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" @click.prevent=\"curTag ='animal'\" :class=\"{active: curTag=='animal'}\" href=\"#\">Animal</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" @click.prevent=\"curTag ='other'\" :class=\"{active: curTag=='other'}\" href=\"#\">Other</a>\n      </li>\n    </ul>\n\n    <gallery :images=\"galleryImageLinks\" :index=\"galleryIndex\" @close=\"galleryIndex = null\" :options=\"galleryOptions\"></gallery>\n\n    <!-- Images -->\n    <div class=\"row form-row\" v-masonry transition-duration=\"0.3s\" item-selector=\".gallery-thumbnail\" column-width=\".gallery-sizer\" :origin-left=\"isRTL ? 'false' : 'true'\">\n\n      <!-- Add this element to properly relayout grid -->\n      <div class=\"gallery-sizer col-sm-6 col-md-6 col-xl-3 position-absolute\"></div>\n\n      <div v-masonry-tile v-for=\"(image, i) in galleryImages\" :key=\"i\" class=\"gallery-thumbnail col-sm-6 col-md-6 col-xl-3 mb-2\">\n        <a @click.prevent=\"galleryIndex = i\" :title=\"image.title\" class=\"img-thumbnail img-thumbnail-zoom-in\" href=\"#\">\n          <span class=\"img-thumbnail-overlay bg-dark opacity-25\"></span>\n          <span class=\"img-thumbnail-content display-4 text-white\">\n            <i class=\"ion ion-ios-search\"></i>\n          </span>\n          <img :src=\"image.url\" :alt=\"image.altText\" class=\"img-fluid\">\n        </a>\n      </div>\n\n    </div>\n    <!-- / Images -->\n\n  </div>\n</template>\n\n<style src=\"@/vendor/libs/vue-gallery/vue-gallery.scss\" lang=\"scss\"></style>\n\n<script>\nimport Vue from 'vue'\nimport { VueMasonryPlugin } from 'vue-masonry/index.js'\nimport VueGallery from 'vue-gallery'\n\nVue.use(VueMasonryPlugin)\n\nexport default {\n  name: 'pages-gallery',\n  metaInfo: {\n    title: 'Gallery - Pages'\n  },\n  components: {\n    gallery: VueGallery\n  },\n  data: () => ({\n    curTag: 'all',\n    galleryIndex: null,\n    originalGalleryImages: [\n      { url: 'img/bg/1.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/2.jpg', altText: '', tag: 'car' },\n      { url: 'img/bg/3.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/4.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/5.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/6.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/7.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/8.jpg', altText: '', tag: 'car' },\n      { url: 'img/bg/9.jpg', altText: '', tag: 'animal' },\n      { url: 'img/bg/10.jpg', altText: '', tag: 'animal' },\n      { url: 'img/bg/11.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/12.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/13.jpg', altText: '', tag: 'nature' },\n      { url: 'img/bg/14.jpg', altText: '', tag: 'animal' },\n      { url: 'img/bg/15.jpg', altText: '', tag: 'other' },\n      { url: 'img/bg/16.jpg', altText: '', tag: 'other' }\n    ],\n    galleryOptions: {\n      // =======================================================================\n      // RTL-only fix: Disable touch events and fix positioning\n      //\n      onopen: function () {\n        if (document.documentElement.getAttribute('dir') !== 'rtl' &&\n               document.body.getAttribute('dir') !== 'rtl') return\n\n        const prototype = Object.getPrototypeOf(this)\n        const galleryTranslateX = prototype.translateX\n\n        prototype.translateX = function (index, x, speed) {\n          x = this.touchStart && this.touchStart.x ? x : -1 * x\n          galleryTranslateX.call(this, index, x, 0, speed)\n        }\n\n        prototype.positionSlide = function (index) {\n          const slide = this.slides[index]\n          slide.style.width = this.slideWidth + 'px'\n          if (this.support.transform) {\n            slide.style.right = index * -this.slideWidth + 'px'\n            this.move(\n              index,\n              this.index > index\n                ? -this.slideWidth\n                : this.index < index ? this.slideWidth : 0,\n              0\n            )\n          }\n        }\n\n        prototype.ontouchstart = function () {}\n        prototype.ontouchmove = function () {}\n        prototype.ontouchend = function () {}\n        prototype.ontouchcancel = function () {}\n      }\n      // END ===================================================================\n    }\n  }),\n  computed: {\n    galleryImages () {\n      const images = this.curTag === 'all'\n        ? this.originalGalleryImages\n        : this.originalGalleryImages.filter(img => img.tag === this.curTag)\n\n      return images.map(img => {\n        return Object.assign({}, img, { url: this.baseUrl + img.url })\n      })\n    },\n\n    galleryImageLinks () {\n      return this.galleryImages.map(img => img.url)\n    }\n  }\n}\n</script>\n"]}]}