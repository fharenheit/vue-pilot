{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/FileManager.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/FileManager.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: 'pages-file-manager',\n  metaInfo: {\n    title: 'File Manager - Pages'\n  },\n  data: () => ({\n    path: [\n      { text: 'home', href: '#' },\n      { text: 'projects', href: '#' },\n      { text: 'site', active: true }\n    ],\n    viewMode: 'col',\n    selected: [],\n\n    // Handle focused items\n    focused: null,\n    dropdownOpened: null,\n\n    list: [\n      { type: 'dir', name: 'Images', changed: '02/13/2018' },\n      { type: 'dir', name: 'Scripts', changed: '02/14/2018' },\n      { type: 'dir', name: 'Utils', changed: '02/15/2018' },\n      { type: 'file', name: 'Archive.zip', changed: '02/16/2018' },\n      { type: 'file', name: 'Build.js', changed: '02/17/2018' },\n      { type: 'file', name: 'Checklist.doc', changed: '02/18/2018' },\n      { type: 'file', name: 'Index.html', changed: '02/19/2018' },\n      { type: 'file', name: 'Image-1.jpg', changed: '02/20/2018', path: 'img/bg/5.jpg' },\n      { type: 'file', name: 'Image-2.png', changed: '02/21/2018', path: 'img/bg/6.jpg' },\n      { type: 'file', name: 'Image-3.gif', changed: '02/22/2018', path: 'img/bg/7.jpg' },\n      { type: 'file', name: 'Main.js', changed: '02/23/2018' },\n      { type: 'file', name: 'MAKEFILE', changed: '02/24/2018' },\n      { type: 'file', name: 'Presentation.pdf', changed: '02/25/2018' },\n      { type: 'file', name: 'README.txt', changed: '02/26/2018' },\n      { type: 'file', name: 'Style.css', changed: '02/27/2018' },\n      { type: 'file', name: 'Test.mp3', changed: '02/28/2018' },\n      { type: 'file', name: 'Tutorial.avi', changed: '03/01/2018' }\n    ],\n\n    // Icons\n    icons: {\n      folder: 'far fa-folder',\n      archive: 'far fa-file-archive',\n      audio: 'far fa-file-audio',\n      video: 'far fa-file-video',\n      js: 'fab fa-js',\n      doc: 'far fa-file-word',\n      html: 'fab fa-html5',\n      pdf: 'far fa-file-pdf',\n      txt: 'far fa-file-alt',\n      css: 'fab fa-css3',\n      unknown: 'far fa-file'\n    }\n  }),\n  methods: {\n    isFolder (file) {\n      return file.type === 'dir'\n    },\n    isImage (file) {\n      return file.type === 'file' && /\\.jpg$|\\.png$|\\.gif$/i.test(file.name)\n    },\n    isFile (file) {\n      return file.type === 'file' && !/\\.jpg$|\\.png$|\\.gif$/i.test(file.name)\n    },\n    fileIcon (file) {\n      let icon = this.icons.unknown\n\n      if (/\\.zip$|\\.tar$|\\.tar\\.gz$|\\.rar$/i.test(file.name)) icon = this.icons.archive\n      if (/\\.mp3$|\\.wma$|\\.ogg$|\\.flac$|\\.aac$/i.test(file.name)) icon = this.icons.audio\n      if (/\\.avi$|\\.flv$|\\.wmv$|\\.mov$|\\.mp4$/i.test(file.name)) icon = this.icons.video\n      if (/\\.js$|\\.es6$|\\.ts$/i.test(file.name)) icon = this.icons.js\n      if (/\\.doc$|\\.docx$/i.test(file.name)) icon = this.icons.doc\n      if (/\\.htm$|\\.html$/i.test(file.name)) icon = this.icons.html\n      if (/\\.pdf$/i.test(file.name)) icon = this.icons.pdf\n      if (/\\.txt$/i.test(file.name)) icon = this.icons.txt\n      if (/\\.css$/i.test(file.name)) icon = this.icons.css\n\n      return icon\n    },\n\n    toggleSelect (checked, item) {\n      if (checked) {\n        this.selected.push(item)\n      } else {\n        this.selected.splice(this.selected.indexOf(item), 1)\n      }\n    },\n\n    // Handle focused items\n    focusIn (item) {\n      this.focused = item\n    },\n    focusOut () {\n      this.focused = null\n    },\n    dropdownShown (item) {\n      this.dropdownOpened = item\n    },\n    dropdownHidden () {\n      this.dropdownOpened = null\n    }\n  }\n}\n",{"version":3,"sources":["FileManager.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FileManager.vue","sourceRoot":"src/components/pages","sourcesContent":["<template>\n  <div>\n\n    <div class=\"bg-lightest container-m--x container-m--y mb-3\">\n\n      <b-breadcrumb :items=\"path\" class=\"text-big container-p-x py-3 m-0\" />\n\n      <hr class=\"m-0\">\n\n      <div class=\"file-manager-actions container-p-x py-2\">\n        <div>\n          <b-btn variant=\"primary\" class=\"mr-2\"><i class=\"ion ion-md-cloud-upload\"></i>&nbsp; Upload</b-btn>\n          <b-btn variant=\"secondary icon-btn\" class=\"mr-2\" :disabled=\"!selected.length\"><i class=\"ion ion-md-cloud-download\"></i></b-btn>\n          <b-dropdown class=\"mr-2\" variant=\"default md-btn-flat px-2\" :right=\"isRTL\">\n            <template slot=\"button-content\"><i class=\"ion ion-ios-settings\"></i></template>\n            <b-dropdown-item href=\"javascript:void(0)\" :disabled=\"!selected.length\">Move</b-dropdown-item>\n            <b-dropdown-item href=\"javascript:void(0)\" :disabled=\"!selected.length\">Copy</b-dropdown-item>\n            <b-dropdown-item href=\"javascript:void(0)\" :disabled=\"!selected.length\">Remove</b-dropdown-item>\n          </b-dropdown>\n        </div>\n        <div>\n          <b-button-group>\n            <b-btn variant=\"default icon-btn md-btn-flat\" :pressed=\"viewMode === 'col'\" @click=\"viewMode='col'\"><i class=\"ion ion-md-apps\"></i></b-btn>\n            <b-btn variant=\"default icon-btn md-btn-flat\" :pressed=\"viewMode === 'row'\" @click=\"viewMode='row'\"><i class=\"ion ion-md-menu\"></i></b-btn>\n          </b-button-group>\n        </div>\n      </div>\n\n      <hr class=\"m-0\">\n    </div>\n\n    <div class=\"file-manager-container\" :class=\"`file-manager-${viewMode}-view`\">\n\n      <!-- Header -->\n      <div class=\"file-manager-row-header\">\n        <div class=\"file-item-name pb-2\">Filename</div>\n        <div class=\"file-item-changed pb-2\">Changed</div>\n      </div>\n      <!-- / Header -->\n\n      <!-- To upper lavel -->\n      <div class=\"file-item\">\n        <div class=\"file-item-icon file-item-level-up fas fa-level-up-alt text-secondary\"></div>\n        <a href=\"javascript:void(0)\" class=\"file-item-name\">..</a>\n      </div>\n      <!-- / To upper lavel -->\n\n      <!-- Files -->\n\n      <div class=\"file-item\" v-for=\"item in list\" :key=\"item.name\" :class=\"{'selected border-primary': selected.includes(item), 'focused': focused === item || dropdownOpened === item}\" @focusin=\"focusIn(item)\" @focusout=\"focusOut()\">\n        <div class=\"file-item-select-bg bg-primary\"></div>\n        <b-check class=\"file-item-checkbox\" :checked=\"selected.includes(item)\" @change=\"toggleSelect($event, item)\"></b-check>\n\n        <div class=\"file-item-icon text-secondary\" :class=\"icons.folder\" v-if=\"isFolder(item)\"></div>\n        <div class=\"file-item-img\" :style=\"{'background-image': `url(${baseUrl}${item.path})`}\" v-if=\"isImage(item)\"></div>\n        <div class=\"file-item-icon text-secondary\" :class=\"fileIcon(item)\" v-if=\"isFile(item)\"></div>\n\n        <a href=\"javascript:void(0)\" class=\"file-item-name\">\n          {{item.name}}\n        </a>\n        <div class=\"file-item-changed\">{{item.changed}}</div>\n        <b-dropdown class=\"file-item-actions\" variant=\"default btn-round icon-btn borderless md-btn-flat hide-arrow\" size=\"sm\" :right=\"!isRTL\" @shown=\"dropdownShown(item)\" @hidden=\"dropdownHidden()\">\n          <template slot=\"button-content\"><i class=\"ion ion-ios-more\"></i></template>\n          <b-dropdown-item href=\"javascript:void(0)\">Rename</b-dropdown-item>\n          <b-dropdown-item href=\"javascript:void(0)\">Move</b-dropdown-item>\n          <b-dropdown-item href=\"javascript:void(0)\">Copy</b-dropdown-item>\n          <b-dropdown-item href=\"javascript:void(0)\">Remove</b-dropdown-item>\n        </b-dropdown>\n      </div>\n\n      <!-- / Files -->\n    </div>\n\n  </div>\n</template>\n\n<!-- Page -->\n<style src=\"@/vendor/styles/pages/file-manager.scss\" lang=\"scss\"></style>\n\n<script>\nexport default {\n  name: 'pages-file-manager',\n  metaInfo: {\n    title: 'File Manager - Pages'\n  },\n  data: () => ({\n    path: [\n      { text: 'home', href: '#' },\n      { text: 'projects', href: '#' },\n      { text: 'site', active: true }\n    ],\n    viewMode: 'col',\n    selected: [],\n\n    // Handle focused items\n    focused: null,\n    dropdownOpened: null,\n\n    list: [\n      { type: 'dir', name: 'Images', changed: '02/13/2018' },\n      { type: 'dir', name: 'Scripts', changed: '02/14/2018' },\n      { type: 'dir', name: 'Utils', changed: '02/15/2018' },\n      { type: 'file', name: 'Archive.zip', changed: '02/16/2018' },\n      { type: 'file', name: 'Build.js', changed: '02/17/2018' },\n      { type: 'file', name: 'Checklist.doc', changed: '02/18/2018' },\n      { type: 'file', name: 'Index.html', changed: '02/19/2018' },\n      { type: 'file', name: 'Image-1.jpg', changed: '02/20/2018', path: 'img/bg/5.jpg' },\n      { type: 'file', name: 'Image-2.png', changed: '02/21/2018', path: 'img/bg/6.jpg' },\n      { type: 'file', name: 'Image-3.gif', changed: '02/22/2018', path: 'img/bg/7.jpg' },\n      { type: 'file', name: 'Main.js', changed: '02/23/2018' },\n      { type: 'file', name: 'MAKEFILE', changed: '02/24/2018' },\n      { type: 'file', name: 'Presentation.pdf', changed: '02/25/2018' },\n      { type: 'file', name: 'README.txt', changed: '02/26/2018' },\n      { type: 'file', name: 'Style.css', changed: '02/27/2018' },\n      { type: 'file', name: 'Test.mp3', changed: '02/28/2018' },\n      { type: 'file', name: 'Tutorial.avi', changed: '03/01/2018' }\n    ],\n\n    // Icons\n    icons: {\n      folder: 'far fa-folder',\n      archive: 'far fa-file-archive',\n      audio: 'far fa-file-audio',\n      video: 'far fa-file-video',\n      js: 'fab fa-js',\n      doc: 'far fa-file-word',\n      html: 'fab fa-html5',\n      pdf: 'far fa-file-pdf',\n      txt: 'far fa-file-alt',\n      css: 'fab fa-css3',\n      unknown: 'far fa-file'\n    }\n  }),\n  methods: {\n    isFolder (file) {\n      return file.type === 'dir'\n    },\n    isImage (file) {\n      return file.type === 'file' && /\\.jpg$|\\.png$|\\.gif$/i.test(file.name)\n    },\n    isFile (file) {\n      return file.type === 'file' && !/\\.jpg$|\\.png$|\\.gif$/i.test(file.name)\n    },\n    fileIcon (file) {\n      let icon = this.icons.unknown\n\n      if (/\\.zip$|\\.tar$|\\.tar\\.gz$|\\.rar$/i.test(file.name)) icon = this.icons.archive\n      if (/\\.mp3$|\\.wma$|\\.ogg$|\\.flac$|\\.aac$/i.test(file.name)) icon = this.icons.audio\n      if (/\\.avi$|\\.flv$|\\.wmv$|\\.mov$|\\.mp4$/i.test(file.name)) icon = this.icons.video\n      if (/\\.js$|\\.es6$|\\.ts$/i.test(file.name)) icon = this.icons.js\n      if (/\\.doc$|\\.docx$/i.test(file.name)) icon = this.icons.doc\n      if (/\\.htm$|\\.html$/i.test(file.name)) icon = this.icons.html\n      if (/\\.pdf$/i.test(file.name)) icon = this.icons.pdf\n      if (/\\.txt$/i.test(file.name)) icon = this.icons.txt\n      if (/\\.css$/i.test(file.name)) icon = this.icons.css\n\n      return icon\n    },\n\n    toggleSelect (checked, item) {\n      if (checked) {\n        this.selected.push(item)\n      } else {\n        this.selected.splice(this.selected.indexOf(item), 1)\n      }\n    },\n\n    // Handle focused items\n    focusIn (item) {\n      this.focused = item\n    },\n    focusOut () {\n      this.focused = null\n    },\n    dropdownShown (item) {\n      this.dropdownOpened = item\n    },\n    dropdownHidden () {\n      this.dropdownOpened = null\n    }\n  }\n}\n</script>\n"]}]}