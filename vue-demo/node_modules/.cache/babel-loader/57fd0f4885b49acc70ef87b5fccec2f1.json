{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-cropper/src/exif-js-min.js","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-cropper/src/exif-js-min.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.typed.uint8-array\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _Promise from \"/Volumes/Data/Projects/pilot/vue-demo/node_modules/@babel/runtime-corejs2/core-js/promise\";\nvar Exif = {};\n\nExif.getData = function (img) {\n  return new _Promise(function (reslove, reject) {\n    var obj = {};\n    getImageData(img).then(function (data) {\n      obj.arrayBuffer = data;\n      obj.orientation = getOrientation(data);\n      reslove(obj);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}; // 这里的获取exif要将图片转ArrayBuffer对象，这里假设获取了图片的baes64\n// 步骤一\n// base64转ArrayBuffer对象\n\n\nfunction getImageData(img) {\n  var data = null;\n  return new _Promise(function (reslove, reject) {\n    if (img.src) {\n      if (/^data\\:/i.test(img.src)) {\n        // Data URI\n        data = base64ToArrayBuffer(img.src);\n        reslove(data);\n      } else if (/^blob\\:/i.test(img.src)) {\n        // Object URL\n        var fileReader = new FileReader();\n\n        fileReader.onload = function (e) {\n          data = e.target.result;\n          reslove(data);\n        };\n\n        objectURLToBlob(img.src, function (blob) {\n          fileReader.readAsArrayBuffer(blob);\n        });\n      } else {\n        var http = new XMLHttpRequest();\n\n        http.onload = function () {\n          if (this.status == 200 || this.status === 0) {\n            data = http.response;\n            reslove(data);\n          } else {\n            throw \"Could not load image\";\n          }\n\n          http = null;\n        };\n\n        http.open(\"GET\", img.src, true);\n        http.responseType = \"arraybuffer\";\n        http.send(null);\n      }\n    } else {\n      reject('img error');\n    }\n  });\n}\n\nfunction objectURLToBlob(url, callback) {\n  var http = new XMLHttpRequest();\n  http.open(\"GET\", url, true);\n  http.responseType = \"blob\";\n\n  http.onload = function (e) {\n    if (this.status == 200 || this.status === 0) {\n      callback(this.response);\n    }\n  };\n\n  http.send();\n}\n\nfunction base64ToArrayBuffer(base64) {\n  base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n  var binary = atob(base64);\n  var len = binary.length;\n  var buffer = new ArrayBuffer(len);\n  var view = new Uint8Array(buffer);\n\n  for (var i = 0; i < len; i++) {\n    view[i] = binary.charCodeAt(i);\n  }\n\n  return buffer;\n} // 步骤二，Unicode码转字符串\n// ArrayBuffer对象 Unicode码转字符串\n\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n\n  for (i = start, length += start; i < length; i++) {\n    str += String.fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n} // 步骤三，获取jpg图片的exif的角度（在ios体现最明显）\n\n\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var length = dataView.byteLength;\n  var orientation;\n  var exifIDCode;\n  var tiffOffset;\n  var firstIFDOffset;\n  var littleEndian;\n  var endianness;\n  var app1Start;\n  var ifdStart;\n  var offset;\n  var i; // Only handle JPEG image (start by 0xFFD8)\n\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset++;\n    }\n  }\n\n  if (app1Start) {\n    exifIDCode = app1Start + 4;\n    tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      endianness = dataView.getUint16(tiffOffset);\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D\n      /* bigEndian */\n      ) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    length = dataView.getUint16(ifdStart, littleEndian);\n\n    for (i = 0; i < length; i++) {\n      offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(offset, littleEndian) === 0x0112\n      /* Orientation */\n      ) {\n          // 8 is the offset of the current tag's value\n          offset += 8; // Get the original orientation value\n\n          orientation = dataView.getUint16(offset, littleEndian); // Override the orientation with its default value for Safari (#120)\n          // if (IS_SAFARI_OR_UIWEBVIEW) {\n          //   dataView.setUint16(offset, 1, littleEndian);\n          // }\n\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\nexport default Exif;",{"version":3,"sources":["/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-cropper/src/exif-js-min.js"],"names":["Exif","getData","img","reslove","reject","obj","getImageData","then","data","arrayBuffer","orientation","getOrientation","catch","error","src","test","base64ToArrayBuffer","fileReader","FileReader","onload","e","target","result","objectURLToBlob","blob","readAsArrayBuffer","http","XMLHttpRequest","status","response","open","responseType","send","url","callback","base64","replace","binary","atob","len","length","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","getStringFromCharCode","dataView","start","str","String","fromCharCode","getUint8","DataView","byteLength","exifIDCode","tiffOffset","firstIFDOffset","littleEndian","endianness","app1Start","ifdStart","offset","getUint16","getUint32"],"mappings":";;;AAAA,IAAMA,IAAI,GAAG,EAAb;;AAEAA,IAAI,CAACC,OAAL,GAAe,UAACC,GAAD;AAAA,SAAS,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACvD,QAAIC,GAAG,GAAG,EAAV;AACAC,IAAAA,YAAY,CAACJ,GAAD,CAAZ,CAAkBK,IAAlB,CAAuB,UAAAC,IAAI,EAAI;AAC7BH,MAAAA,GAAG,CAACI,WAAJ,GAAkBD,IAAlB;AACAH,MAAAA,GAAG,CAACK,WAAJ,GAAkBC,cAAc,CAACH,IAAD,CAAhC;AACAL,MAAAA,OAAO,CAACE,GAAD,CAAP;AACD,KAJD,EAIGO,KAJH,CAIS,UAAAC,KAAK,EAAI;AAChBT,MAAAA,MAAM,CAACS,KAAD,CAAN;AACD,KAND;AAOD,GATuB,CAAT;AAAA,CAAf,C,CAWA;AACA;AACA;;;AACA,SAASP,YAAT,CAAsBJ,GAAtB,EAA2B;AACzB,MAAIM,IAAI,GAAG,IAAX;AACA,SAAO,aAAY,UAACL,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAIF,GAAG,CAACY,GAAR,EAAa;AACX,UAAI,WAAWC,IAAX,CAAgBb,GAAG,CAACY,GAApB,CAAJ,EAA8B;AAAE;AAC9BN,QAAAA,IAAI,GAAGQ,mBAAmB,CAACd,GAAG,CAACY,GAAL,CAA1B;AACAX,QAAAA,OAAO,CAACK,IAAD,CAAP;AACD,OAHD,MAGO,IAAI,WAAWO,IAAX,CAAgBb,GAAG,CAACY,GAApB,CAAJ,EAA8B;AAAE;AACrC,YAAIG,UAAU,GAAG,IAAIC,UAAJ,EAAjB;;AACAD,QAAAA,UAAU,CAACE,MAAX,GAAoB,UAAUC,CAAV,EAAa;AAC/BZ,UAAAA,IAAI,GAAGY,CAAC,CAACC,MAAF,CAASC,MAAhB;AACAnB,UAAAA,OAAO,CAACK,IAAD,CAAP;AACD,SAHD;;AAIAe,QAAAA,eAAe,CAACrB,GAAG,CAACY,GAAL,EAAU,UAAUU,IAAV,EAAgB;AACvCP,UAAAA,UAAU,CAACQ,iBAAX,CAA6BD,IAA7B;AACD,SAFc,CAAf;AAGD,OATM,MASA;AACL,YAAIE,IAAI,GAAG,IAAIC,cAAJ,EAAX;;AACAD,QAAAA,IAAI,CAACP,MAAL,GAAc,YAAY;AACxB,cAAI,KAAKS,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,KAAgB,CAA1C,EAA6C;AAC3CpB,YAAAA,IAAI,GAAGkB,IAAI,CAACG,QAAZ;AACA1B,YAAAA,OAAO,CAACK,IAAD,CAAP;AACD,WAHD,MAGO;AACL,kBAAM,sBAAN;AACD;;AACDkB,UAAAA,IAAI,GAAG,IAAP;AACD,SARD;;AASAA,QAAAA,IAAI,CAACI,IAAL,CAAU,KAAV,EAAiB5B,GAAG,CAACY,GAArB,EAA0B,IAA1B;AACAY,QAAAA,IAAI,CAACK,YAAL,GAAoB,aAApB;AACAL,QAAAA,IAAI,CAACM,IAAL,CAAU,IAAV;AACD;AACF,KA5BD,MA4BO;AACL5B,MAAAA,MAAM,CAAC,WAAD,CAAN;AACD;AACF,GAhCM,CAAP;AAiCD;;AAED,SAASmB,eAAT,CAAyBU,GAAzB,EAA8BC,QAA9B,EAAwC;AACtC,MAAIR,IAAI,GAAG,IAAIC,cAAJ,EAAX;AACAD,EAAAA,IAAI,CAACI,IAAL,CAAU,KAAV,EAAiBG,GAAjB,EAAsB,IAAtB;AACAP,EAAAA,IAAI,CAACK,YAAL,GAAoB,MAApB;;AACAL,EAAAA,IAAI,CAACP,MAAL,GAAc,UAAUC,CAAV,EAAa;AACzB,QAAI,KAAKQ,MAAL,IAAe,GAAf,IAAsB,KAAKA,MAAL,KAAgB,CAA1C,EAA6C;AAC3CM,MAAAA,QAAQ,CAAC,KAAKL,QAAN,CAAR;AACD;AACF,GAJD;;AAKAH,EAAAA,IAAI,CAACM,IAAL;AACD;;AAID,SAAShB,mBAAT,CAA6BmB,MAA7B,EAAqC;AACnCA,EAAAA,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAe,6BAAf,EAA8C,EAA9C,CAAT;AACA,MAAIC,MAAM,GAAGC,IAAI,CAACH,MAAD,CAAjB;AACA,MAAII,GAAG,GAAGF,MAAM,CAACG,MAAjB;AACA,MAAIC,MAAM,GAAG,IAAIC,WAAJ,CAAgBH,GAAhB,CAAb;AACA,MAAII,IAAI,GAAG,IAAIC,UAAJ,CAAeH,MAAf,CAAX;;AACA,OAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,GAApB,EAAyBM,CAAC,EAA1B,EAA8B;AAC5BF,IAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUR,MAAM,CAACS,UAAP,CAAkBD,CAAlB,CAAV;AACD;;AACD,SAAOJ,MAAP;AACD,C,CACD;AACA;;;AACA,SAASM,qBAAT,CAA+BC,QAA/B,EAAyCC,KAAzC,EAAgDT,MAAhD,EAAwD;AACtD,MAAIU,GAAG,GAAG,EAAV;AACA,MAAIL,CAAJ;;AACA,OAAKA,CAAC,GAAGI,KAAJ,EAAWT,MAAM,IAAIS,KAA1B,EAAiCJ,CAAC,GAAGL,MAArC,EAA6CK,CAAC,EAA9C,EAAkD;AAChDK,IAAAA,GAAG,IAAIC,MAAM,CAACC,YAAP,CAAoBJ,QAAQ,CAACK,QAAT,CAAkBR,CAAlB,CAApB,CAAP;AACD;;AACD,SAAOK,GAAP;AACD,C,CAED;;;AACA,SAASvC,cAAT,CAAwBF,WAAxB,EAAqC;AACnC,MAAIuC,QAAQ,GAAG,IAAIM,QAAJ,CAAa7C,WAAb,CAAf;AACA,MAAI+B,MAAM,GAAGQ,QAAQ,CAACO,UAAtB;AACA,MAAI7C,WAAJ;AACA,MAAI8C,UAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,cAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,UAAJ;AACA,MAAIC,SAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,MAAJ;AACA,MAAIlB,CAAJ,CAZmC,CAanC;;AACA,MAAIG,QAAQ,CAACK,QAAT,CAAkB,CAAlB,MAAyB,IAAzB,IAAiCL,QAAQ,CAACK,QAAT,CAAkB,CAAlB,MAAyB,IAA9D,EAAoE;AAClEU,IAAAA,MAAM,GAAG,CAAT;;AACA,WAAOA,MAAM,GAAGvB,MAAhB,EAAwB;AACtB,UAAIQ,QAAQ,CAACK,QAAT,CAAkBU,MAAlB,MAA8B,IAA9B,IAAsCf,QAAQ,CAACK,QAAT,CAAkBU,MAAM,GAAG,CAA3B,MAAkC,IAA5E,EAAkF;AAChFF,QAAAA,SAAS,GAAGE,MAAZ;AACA;AACD;;AACDA,MAAAA,MAAM;AACP;AACF;;AACD,MAAIF,SAAJ,EAAe;AACbL,IAAAA,UAAU,GAAGK,SAAS,GAAG,CAAzB;AACAJ,IAAAA,UAAU,GAAGI,SAAS,GAAG,EAAzB;;AACA,QAAId,qBAAqB,CAACC,QAAD,EAAWQ,UAAX,EAAuB,CAAvB,CAArB,KAAmD,MAAvD,EAA+D;AAC7DI,MAAAA,UAAU,GAAGZ,QAAQ,CAACgB,SAAT,CAAmBP,UAAnB,CAAb;AACAE,MAAAA,YAAY,GAAGC,UAAU,KAAK,MAA9B;;AAEA,UAAID,YAAY,IAAIC,UAAU,KAAK;AAAO;AAA1C,QAA2D;AACzD,cAAIZ,QAAQ,CAACgB,SAAT,CAAmBP,UAAU,GAAG,CAAhC,EAAmCE,YAAnC,MAAqD,MAAzD,EAAiE;AAC/DD,YAAAA,cAAc,GAAGV,QAAQ,CAACiB,SAAT,CAAmBR,UAAU,GAAG,CAAhC,EAAmCE,YAAnC,CAAjB;;AAEA,gBAAID,cAAc,IAAI,UAAtB,EAAkC;AAChCI,cAAAA,QAAQ,GAAGL,UAAU,GAAGC,cAAxB;AACD;AACF;AACF;AACF;AACF;;AACD,MAAII,QAAJ,EAAc;AACZtB,IAAAA,MAAM,GAAGQ,QAAQ,CAACgB,SAAT,CAAmBF,QAAnB,EAA6BH,YAA7B,CAAT;;AAEA,SAAKd,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGL,MAAhB,EAAwBK,CAAC,EAAzB,EAA6B;AAC3BkB,MAAAA,MAAM,GAAGD,QAAQ,GAAGjB,CAAC,GAAG,EAAf,GAAoB,CAA7B;;AACA,UAAIG,QAAQ,CAACgB,SAAT,CAAmBD,MAAnB,EAA2BJ,YAA3B,MAA6C;AAAO;AAAxD,QAA2E;AAEzE;AACAI,UAAAA,MAAM,IAAI,CAAV,CAHyE,CAKzE;;AACArD,UAAAA,WAAW,GAAGsC,QAAQ,CAACgB,SAAT,CAAmBD,MAAnB,EAA2BJ,YAA3B,CAAd,CANyE,CAQzE;AACA;AACA;AACA;;AACA;AACD;AACF;AACF;;AACD,SAAOjD,WAAP;AACD;;AAID,eAAeV,IAAf","sourcesContent":["const Exif = {};\n\nExif.getData = (img) => new Promise((reslove, reject) => {\n  let obj = {};\n  getImageData(img).then(data => {\n    obj.arrayBuffer = data;\n    obj.orientation = getOrientation(data);\n    reslove(obj)\n  }).catch(error => {\n    reject(error)\n  })\n})\n\n// 这里的获取exif要将图片转ArrayBuffer对象，这里假设获取了图片的baes64\n// 步骤一\n// base64转ArrayBuffer对象\nfunction getImageData(img) {\n  let data = null;\n  return new Promise((reslove, reject) => {\n    if (img.src) {\n      if (/^data\\:/i.test(img.src)) { // Data URI\n        data = base64ToArrayBuffer(img.src);\n        reslove(data)\n      } else if (/^blob\\:/i.test(img.src)) { // Object URL\n        var fileReader = new FileReader();\n        fileReader.onload = function (e) {\n          data = e.target.result;\n          reslove(data)\n        };\n        objectURLToBlob(img.src, function (blob) {\n          fileReader.readAsArrayBuffer(blob);\n        });\n      } else {\n        var http = new XMLHttpRequest();\n        http.onload = function () {\n          if (this.status == 200 || this.status === 0) {\n            data = http.response\n            reslove(data)\n          } else {\n            throw \"Could not load image\";\n          }\n          http = null;\n        };\n        http.open(\"GET\", img.src, true);\n        http.responseType = \"arraybuffer\";\n        http.send(null);\n      }\n    } else {\n      reject('img error')\n    }\n  })\n}\n\nfunction objectURLToBlob(url, callback) {\n  var http = new XMLHttpRequest();\n  http.open(\"GET\", url, true);\n  http.responseType = \"blob\";\n  http.onload = function (e) {\n    if (this.status == 200 || this.status === 0) {\n      callback(this.response);\n    }\n  };\n  http.send();\n}\n\n\n\nfunction base64ToArrayBuffer(base64) {\n  base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n  var binary = atob(base64);\n  var len = binary.length;\n  var buffer = new ArrayBuffer(len);\n  var view = new Uint8Array(buffer);\n  for (var i = 0; i < len; i++) {\n    view[i] = binary.charCodeAt(i);\n  }\n  return buffer;\n}\n// 步骤二，Unicode码转字符串\n// ArrayBuffer对象 Unicode码转字符串\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i;\n  for (i = start, length += start; i < length; i++) {\n    str += String.fromCharCode(dataView.getUint8(i));\n  }\n  return str;\n}\n\n// 步骤三，获取jpg图片的exif的角度（在ios体现最明显）\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var length = dataView.byteLength;\n  var orientation;\n  var exifIDCode;\n  var tiffOffset;\n  var firstIFDOffset;\n  var littleEndian;\n  var endianness;\n  var app1Start;\n  var ifdStart;\n  var offset;\n  var i;\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    offset = 2;\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n      offset++;\n    }\n  }\n  if (app1Start) {\n    exifIDCode = app1Start + 4;\n    tiffOffset = app1Start + 10;\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      endianness = dataView.getUint16(tiffOffset);\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n        if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n          firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n          if (firstIFDOffset >= 0x00000008) {\n            ifdStart = tiffOffset + firstIFDOffset;\n          }\n        }\n      }\n    }\n  }\n  if (ifdStart) {\n    length = dataView.getUint16(ifdStart, littleEndian);\n\n    for (i = 0; i < length; i++) {\n      offset = ifdStart + i * 12 + 2;\n      if (dataView.getUint16(offset, littleEndian) === 0x0112 /* Orientation */) {\n\n        // 8 is the offset of the current tag's value\n        offset += 8;\n\n        // Get the original orientation value\n        orientation = dataView.getUint16(offset, littleEndian);\n\n        // Override the orientation with its default value for Safari (#120)\n        // if (IS_SAFARI_OR_UIWEBVIEW) {\n        //   dataView.setUint16(offset, 1, littleEndian);\n        // }\n        break;\n      }\n    }\n  }\n  return orientation;\n}\n\n\n\nexport default Exif"]}]}