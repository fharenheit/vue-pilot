{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-masonry/src/masonry.plugin.js","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-masonry/src/masonry.plugin.js","mtime":1534681017000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Object$keys from \"/Volumes/Data/Projects/pilot/vue-demo/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _parseInt from \"/Volumes/Data/Projects/pilot/vue-demo/node_modules/@babel/runtime-corejs2/core-js/parse-int\";\nimport Masonry from 'masonry-layout';\nimport ImageLoaded from 'imagesloaded';\nvar attributesMap = {\n  'column-width': 'columnWidth',\n  'transition-duration': 'transitionDuration',\n  'item-selector': 'itemSelector',\n  'origin-left': 'originLeft',\n  'origin-top': 'originTop',\n  'fit-width': 'fitWidth',\n  'stamp': 'stamp',\n  'gutter': 'gutter',\n  'percent-position': 'percentPosition',\n  'horizontal-order': 'horizontalOrder',\n  'stagger': 'stagger'\n};\nvar EVENT_ADD = 'vuemasonry.itemAdded';\nvar EVENT_REMOVE = 'vuemasonry.itemRemoved';\nvar EVENT_IMAGE_LOADED = 'vuemasonry.imageLoaded';\nvar EVENT_DESTROY = 'vuemasonry.destroy';\n\nvar stringToBool = function stringToBool(val) {\n  return (val + '').toLowerCase() === 'true';\n};\n\nvar numberOrSelector = function numberOrSelector(val) {\n  return isNaN(val) ? val : _parseInt(val);\n};\n\nvar collectOptions = function collectOptions(attrs) {\n  var res = {};\n  var attributesArray = Array.prototype.slice.call(attrs);\n  attributesArray.forEach(function (attr) {\n    if (_Object$keys(attributesMap).indexOf(attr.name) > -1) {\n      if (attr.name.indexOf('origin') > -1) {\n        res[attributesMap[attr.name]] = stringToBool(attr.value);\n      } else if (attr.name === 'column-width' || attr.name === 'gutter') {\n        res[attributesMap[attr.name]] = numberOrSelector(attr.value);\n      } else {\n        res[attributesMap[attr.name]] = attr.value;\n      }\n    }\n  });\n  return res;\n};\n\nexport var VueMasonryPlugin = function VueMasonryPlugin() {};\n\nVueMasonryPlugin.install = function (Vue, options) {\n  var Events = new Vue({});\n  Vue.directive('masonry', {\n    props: ['transitionDuration', ' itemSelector'],\n    inserted: function inserted(el, nodeObj) {\n      if (!Masonry) {\n        throw new Error('Masonry plugin is not defined. Please check it\\'s connected and parsed correctly.');\n      }\n\n      var masonry = new Masonry(el, collectOptions(el.attributes));\n\n      var masonryDraw = function masonryDraw() {\n        masonry.reloadItems();\n        masonry.layout();\n      };\n\n      Vue.nextTick(function () {\n        masonryDraw();\n      });\n\n      var masonryRedrawHandler = function masonryRedrawHandler(eventData) {\n        masonryDraw();\n      };\n\n      var masonryDestroyHandler = function masonryDestroyHandler(eventData) {\n        Events.$off(EVENT_ADD, masonryRedrawHandler);\n        Events.$off(EVENT_REMOVE, masonryRedrawHandler);\n        Events.$off(EVENT_IMAGE_LOADED, masonryRedrawHandler);\n        Events.$off(EVENT_DESTROY, masonryDestroyHandler);\n        masonry.destroy();\n      };\n\n      Events.$on(EVENT_ADD, masonryRedrawHandler);\n      Events.$on(EVENT_REMOVE, masonryRedrawHandler);\n      Events.$on(EVENT_IMAGE_LOADED, masonryRedrawHandler);\n      Events.$on(EVENT_DESTROY, masonryDestroyHandler);\n    },\n    unbind: function unbind(el, nodeObj) {\n      Events.$emit(EVENT_DESTROY);\n    }\n  });\n  Vue.directive('masonryTile', {\n    inserted: function inserted(el) {\n      Events.$emit(EVENT_ADD, {\n        'element': el\n      }); // eslint-disable-next-line\n\n      new ImageLoaded(el, function () {\n        Events.$emit(EVENT_IMAGE_LOADED, {\n          'element': el\n        });\n      });\n    },\n    unbind: function unbind(el) {\n      Events.$emit(EVENT_REMOVE, {\n        'element': el\n      });\n    }\n  });\n\n  Vue.prototype.$redrawVueMasonry = function () {\n    Events.$emit(EVENT_ADD);\n  };\n};",{"version":3,"sources":["/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-masonry/src/masonry.plugin.js"],"names":["Masonry","ImageLoaded","attributesMap","EVENT_ADD","EVENT_REMOVE","EVENT_IMAGE_LOADED","EVENT_DESTROY","stringToBool","val","toLowerCase","numberOrSelector","isNaN","collectOptions","attrs","res","attributesArray","Array","prototype","slice","call","forEach","attr","indexOf","name","value","VueMasonryPlugin","install","Vue","options","Events","directive","props","inserted","el","nodeObj","Error","masonry","attributes","masonryDraw","reloadItems","layout","nextTick","masonryRedrawHandler","eventData","masonryDestroyHandler","$off","destroy","$on","unbind","$emit","$redrawVueMasonry"],"mappings":"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","sourcesContent":["import Masonry from 'masonry-layout'\nimport ImageLoaded from 'imagesloaded'\n\nconst attributesMap = {\n  'column-width': 'columnWidth',\n  'transition-duration': 'transitionDuration',\n  'item-selector': 'itemSelector',\n  'origin-left': 'originLeft',\n  'origin-top': 'originTop',\n  'fit-width': 'fitWidth',\n  'stamp': 'stamp',\n  'gutter': 'gutter',\n  'percent-position': 'percentPosition',\n  'horizontal-order': 'horizontalOrder',\n  'stagger': 'stagger'\n}\nconst EVENT_ADD = 'vuemasonry.itemAdded'\nconst EVENT_REMOVE = 'vuemasonry.itemRemoved'\nconst EVENT_IMAGE_LOADED = 'vuemasonry.imageLoaded'\nconst EVENT_DESTROY = 'vuemasonry.destroy'\n\nconst stringToBool = function (val) { return (val + '').toLowerCase() === 'true' }\n\nconst numberOrSelector = function (val) { return isNaN(val) ? val : parseInt(val) }\n\nconst collectOptions = function (attrs) {\n  var res = {}\n  var attributesArray = Array.prototype.slice.call(attrs)\n  attributesArray.forEach(function (attr) {\n    if (Object.keys(attributesMap).indexOf(attr.name) > -1) {\n      if (attr.name.indexOf('origin') > -1) {\n        res[attributesMap[attr.name]] = stringToBool(attr.value)\n      } else if (attr.name === 'column-width' || attr.name === 'gutter') {\n        res[attributesMap[attr.name]] = numberOrSelector(attr.value)\n      } else {\n        res[attributesMap[attr.name]] = attr.value\n      }\n    }\n  })\n  return res\n}\n\nexport const VueMasonryPlugin = function () {}\n\nVueMasonryPlugin.install = function (Vue, options) {\n  const Events = new Vue({})\n\n  Vue.directive('masonry', {\n    props: ['transitionDuration', ' itemSelector'],\n\n    inserted: function (el, nodeObj) {\n      if (!Masonry) {\n        throw new Error('Masonry plugin is not defined. Please check it\\'s connected and parsed correctly.')\n      }\n      const masonry = new Masonry(el, collectOptions(el.attributes))\n      const masonryDraw = function () {\n        masonry.reloadItems()\n        masonry.layout()\n      }\n      Vue.nextTick(function () {\n        masonryDraw()\n      })\n\n      const masonryRedrawHandler = function (eventData) {\n        masonryDraw()\n      }\n\n      const masonryDestroyHandler = function (eventData) {\n        Events.$off(EVENT_ADD, masonryRedrawHandler)\n        Events.$off(EVENT_REMOVE, masonryRedrawHandler)\n        Events.$off(EVENT_IMAGE_LOADED, masonryRedrawHandler)\n        Events.$off(EVENT_DESTROY, masonryDestroyHandler)\n        masonry.destroy()\n      }\n\n      Events.$on(EVENT_ADD, masonryRedrawHandler)\n      Events.$on(EVENT_REMOVE, masonryRedrawHandler)\n      Events.$on(EVENT_IMAGE_LOADED, masonryRedrawHandler)\n      Events.$on(EVENT_DESTROY, masonryDestroyHandler)\n    },\n    unbind: function (el, nodeObj) {\n      Events.$emit(EVENT_DESTROY)\n    }\n  })\n\n  Vue.directive('masonryTile', {\n\n    inserted: function (el) {\n      Events.$emit(EVENT_ADD, {\n        'element': el\n      })\n      // eslint-disable-next-line\n      new ImageLoaded(el, function () {\n        Events.$emit(EVENT_IMAGE_LOADED, {\n          'element': el\n        })\n      })\n    },\n    unbind: function (el) {\n      Events.$emit(EVENT_REMOVE, {\n        'element': el\n      })\n    }\n  })\n\n  Vue.prototype.$redrawVueMasonry = function () {\n    Events.$emit(EVENT_ADD)\n  }\n}\n"]}]}