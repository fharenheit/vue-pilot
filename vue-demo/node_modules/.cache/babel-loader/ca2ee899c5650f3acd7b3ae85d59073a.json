{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js!/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/ECommerceOrderList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/components/pages/ECommerceOrderList.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.string.includes\";\nimport _Object$keys from \"/Volumes/Data/Projects/pilot/vue-demo/node_modules/@babel/runtime-corejs2/core-js/object/keys\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport * as numeral from 'numeral';\nexport default {\n  name: 'pages-e-commerce-order-list',\n  metaInfo: {\n    title: 'Order list - Pages'\n  },\n  data: function data() {\n    return {\n      // Options\n      dataUrl: 'json/pages_e-commerce_order-list.json',\n      searchKeys: ['id', 'customer', 'amount'],\n      sortBy: 'id',\n      sortDesc: true,\n      perPage: 10,\n      fields: [{\n        key: 'id',\n        sortable: true,\n        tdClass: 'align-middle'\n      }, {\n        key: 'customer',\n        sortable: true,\n        tdClass: 'align-middle'\n      }, {\n        key: 'amount',\n        sortable: true,\n        formatter: function formatter(value) {\n          return numeral(value).format('$0,0.00');\n        },\n        tdClass: 'align-middle'\n      }, {\n        key: 'date',\n        sortable: true,\n        tdClass: 'align-middle'\n      }, {\n        key: 'status',\n        sortable: true,\n        tdClass: 'align-middle'\n      }, {\n        key: 'actions',\n        label: ' ',\n        tdClass: 'text-nowrap align-middle'\n      }],\n      ordersData: [],\n      originalOrdersData: [],\n      currentPage: 1\n    };\n  },\n  computed: {\n    totalItems: function totalItems() {\n      return this.ordersData.length;\n    },\n    totalPages: function totalPages() {\n      return Math.ceil(this.totalItems / this.perPage);\n    }\n  },\n  methods: {\n    filter: function filter(value) {\n      var _this = this;\n\n      var val = value.toLowerCase();\n      var filtered = this.originalOrdersData.filter(function (d) {\n        return _Object$keys(d).filter(function (k) {\n          return _this.searchKeys.includes(k);\n        }).map(function (k) {\n          return String(d[k]);\n        }).join('|').toLowerCase().indexOf(val) !== -1 || !val;\n      });\n      this.ordersData = filtered;\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    var req = new XMLHttpRequest();\n    req.open('GET', \"\".concat(this.baseUrl).concat(this.dataUrl));\n\n    req.onload = function () {\n      var data = JSON.parse(req.response);\n      _this2.ordersData = data;\n      _this2.originalOrdersData = data.slice(0);\n    };\n\n    req.send();\n  }\n};",{"version":3,"sources":["ECommerceOrderList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <h4 class=\"font-weight-bold py-3 mb-4\">\n      Orders\n    </h4>\n\n    <b-card no-body>\n\n      <!-- Table controls -->\n      <b-card-body>\n\n        <div class=\"row\">\n          <div class=\"col\">\n            Per page: &nbsp;\n            <b-select size=\"sm\" v-model=\"perPage\" :options=\"[10, 20, 30, 40, 50]\" class=\"d-inline-block w-auto\" />\n          </div>\n          <div class=\"col\">\n            <b-input size=\"sm\" placeholder=\"Search...\" class=\"d-inline-block w-auto float-sm-right\" @input=\"filter($event)\" />\n          </div>\n        </div>\n\n      </b-card-body>\n      <!-- / Table controls -->\n\n      <!-- Table -->\n      <hr class=\"border-light m-0\">\n      <div class=\"table-responsive\">\n\n        <b-table\n          :items=\"ordersData\"\n          :fields=\"fields\"\n          :sort-by.sync=\"sortBy\"\n          :sort-desc.sync=\"sortDesc\"\n          :striped=\"true\"\n          :bordered=\"true\"\n          :current-page=\"currentPage\"\n          :per-page=\"perPage\"\n          class=\"orders-table card-table\">\n\n          <template slot=\"status\" slot-scope=\"data\">\n            <b-badge variant=\"outline-success\" v-if=\"data.item.status === 1\">Shipped</b-badge>\n            <b-badge variant=\"outline-warning\" v-if=\"data.item.status === 2\">Pending</b-badge>\n            <b-badge variant=\"outline-info\" v-if=\"data.item.status === 3\">Sent</b-badge>\n            <b-badge variant=\"outline-danger\" v-if=\"data.item.status === 4\">Cancelled</b-badge>\n          </template>\n\n          <template slot=\"actions\" slot-scope=\"data\">\n            <b-btn variant=\"default btn-xs icon-btn md-btn-flat\" v-b-tooltip.hover title=\"Show\"><i class=\"ion ion-md-eye\"></i></b-btn>\n            <b-btn variant=\"default btn-xs icon-btn md-btn-flat\" v-b-tooltip.hover title=\"Edit\"><i class=\"ion ion-md-create\"></i></b-btn>\n          </template>\n        </b-table>\n\n      </div>\n\n      <!-- Pagination -->\n      <b-card-body class=\"pt-0 pb-3\">\n\n        <div class=\"row\">\n          <div class=\"col-sm text-sm-left text-center pt-3\">\n            <span class=\"text-muted\" v-if=\"totalItems\">Page {{ currentPage }} of {{ totalPages }}</span>\n          </div>\n          <div class=\"col-sm pt-3\">\n            <b-pagination class=\"justify-content-center justify-content-sm-end m-0\"\n              v-if=\"totalItems\"\n              v-model=\"currentPage\"\n              :total-rows=\"totalItems\"\n              :per-page=\"perPage\"\n              size=\"sm\" />\n          </div>\n        </div>\n\n      </b-card-body>\n      <!-- / Pagination -->\n\n    </b-card>\n  </div>\n</template>\n\n<script>\nimport * as numeral from 'numeral'\n\nexport default {\n  name: 'pages-e-commerce-order-list',\n  metaInfo: {\n    title: 'Order list - Pages'\n  },\n\n  data: () => ({\n    // Options\n    dataUrl: 'json/pages_e-commerce_order-list.json',\n    searchKeys: ['id', 'customer', 'amount'],\n    sortBy: 'id',\n    sortDesc: true,\n    perPage: 10,\n\n    fields: [\n      { key: 'id', sortable: true, tdClass: 'align-middle' },\n      { key: 'customer', sortable: true, tdClass: 'align-middle' },\n      { key: 'amount', sortable: true, formatter: value => numeral(value).format('$0,0.00'), tdClass: 'align-middle' },\n      { key: 'date', sortable: true, tdClass: 'align-middle' },\n      { key: 'status', sortable: true, tdClass: 'align-middle' },\n      { key: 'actions', label: ' ', tdClass: 'text-nowrap align-middle' }\n    ],\n\n    ordersData: [],\n    originalOrdersData: [],\n\n    currentPage: 1\n  }),\n\n  computed: {\n    totalItems () {\n      return this.ordersData.length\n    },\n    totalPages () {\n      return Math.ceil(this.totalItems / this.perPage)\n    }\n  },\n\n  methods: {\n    filter (value) {\n      const val = value.toLowerCase()\n      const filtered = this.originalOrdersData.filter(d => {\n        return Object.keys(d)\n          .filter(k => this.searchKeys.includes(k))\n          .map(k => String(d[k]))\n          .join('|')\n          .toLowerCase()\n          .indexOf(val) !== -1 || !val\n      })\n      this.ordersData = filtered\n    }\n  },\n\n  created () {\n    const req = new XMLHttpRequest()\n    req.open('GET', `${this.baseUrl}${this.dataUrl}`)\n\n    req.onload = () => {\n      const data = JSON.parse(req.response)\n      this.ordersData = data\n      this.originalOrdersData = data.slice(0)\n    }\n\n    req.send()\n  }\n}\n</script>\n"],"sourceRoot":"src/components/pages"}]}