{"remainingRequest":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js!/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Data/Projects/pilot/vue-demo/src/cui-components/CuiVueDragula.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Data/Projects/pilot/vue-demo/src/cui-components/CuiVueDragula.vue","mtime":1548946280000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Volumes/Data/Projects/pilot/vue-demo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport VueDragula from 'vue-dragula';\nVue.use(VueDragula);\nexport default {\n  components: {},\n  created: function created() {\n    Vue.vueDragula.options('second-bag', {\n      copy: true\n    });\n    Vue.vueDragula.options('third-bag', {\n      moves: function moves(el, container, handle) {\n        return handle.classList.contains('handle');\n      }\n    });\n  }\n};",{"version":3,"sources":["CuiVueDragula.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgIA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,UAAA,MAAA,aAAA;AAEA,GAAA,CAAA,GAAA,CAAA,UAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAGA,EAAA,OAHA,qBAGA;AACA,IAAA,GAAA,CAAA,UAAA,CAAA,OAAA,CAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,IAAA,GAAA,CAAA,UAAA,CAAA,OAAA,CAAA,WAAA,EAAA;AACA,MAAA,KADA,iBACA,EADA,EACA,SADA,EACA,MADA,EACA;AACA,eAAA,MAAA,CAAA,SAAA,CAAA,QAAA,CAAA,QAAA,CAAA;AACA;AAHA,KAAA;AAKA;AAZA,CAAA","sourcesContent":["<template>\n  <div class=\"ui-block\">\n    <h3 class=\"ui-block-heading\">vue-dragula</h3>\n    <a target=\"_blank\" href=\"https://github.com/Astray-git/vue-dragula\" class=\"ui-block-description\">https://github.com/Astray-git/vue-dragula</a>\n\n    <h4 class=\"ui-block-heading\">Examples</h4>\n\n    <div class=\"cui-example cui-example-vertical-spacing\">\n      <div class=\"row\">\n        <div v-dragula bag=\"first-bag\" class=\"col\">\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              You can move these elements between these two containers\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              Moving them anywhere else isn't quite possible\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              Anything can be moved around. That includes images, <a href='https://github.com/bevacqua/dragula'>links</a>, or any other nested elements.\n              <img :src=\"`${baseUrl}img/bg/4.jpg`\" alt=\"\" class=\"w-100 my-3\">\n              <sub>(You can still click on links, as usual!)</sub>\n            </div>\n          </div>\n        </div>\n        <div v-dragula bag=\"first-bag\" class=\"col\">\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              There's also the possibility of moving elements around in the same container, changing their position\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              This is the default use case. You only need to specify the containers you want to use\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              More interactive use cases lie ahead\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              <p>Moving <code>&lt;input/&gt;</code> elements works just fine. You can still focus them, too.</p>\n              <input placeholder='See?' class=\"form-control\">\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              Make sure to check out the <a href='https://github.com/bevacqua/dragula#readme'>documentation on GitHub!</a>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h4 class=\"ui-block-heading\">Copying</h4>\n\n      <div class=\"row\" style=\"margin-top:0 !important\">\n        <div v-dragula bag=\"second-bag\" class=\"col-6\">\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              When elements are copyable, they can't be sorted in their origin container\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              Copying prevents original elements from being dragged. A copy gets created and <em>that</em> gets dragged instead\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              Whenever that happens, a <code>cloned</code> event is raised\n            </div>\n          </div>\n        </div>\n        <div v-dragula bag=\"second-bag\" class=\"col-6\">\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              Note that the clones get destroyed if they're not dropped into another container\n            </div>\n          </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              You'll be dragging a copy, so when they're dropped into another container you'll see the duplication.\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <h4 class=\"ui-block-heading\">Drag handle</h4>\n\n      <div class=\"row\" style=\"margin-top:0 !important\">\n        <div v-dragula bag=\"third-bag\" class=\"col-6\">\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              <span class=\"handle ion ion-ios-move d-inline-block bg-primary text-white p-2 mr-2 mb-1\"></span>Move me, but you can use the plus sign to drag me around.</div>\n            </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              <span class=\"handle ion ion-ios-move d-inline-block bg-primary text-white p-2 mr-2 mb-1\"></span>Note that <code>handle</code> element in the <code>moves</code> handler is just the original event target.</div>\n            </div>\n        </div>\n        <div v-dragula bag=\"third-bag\" class=\"col-6\">\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              <span class=\"handle ion ion-ios-move d-inline-block bg-primary text-white p-2 mr-2 mb-1\"></span>This might also be useful if you want multiple children of an element to be able to trigger a drag event.</div>\n            </div>\n          <div class=\"dragula-example card card-condenced\">\n            <div class=\"card-body\">\n              <span class=\"handle ion ion-ios-move d-inline-block bg-primary text-white p-2 mr-2 mb-1\"></span>You can also use the <code>moves</code> option to determine whether an element can be dragged at all from a container, <em>drag handle or not</em>.</div>\n            </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<style src=\"vue-dragula/styles/dragula.css\" />\n<style>\n  .dragula-example {\n    margin-bottom: 6px;\n  }\n</style>\n\n<script>\nimport Vue from 'vue'\nimport VueDragula from 'vue-dragula'\n\nVue.use(VueDragula)\n\nexport default {\n  components: {\n  },\n  created () {\n    Vue.vueDragula.options('second-bag', {\n      copy: true\n    })\n    Vue.vueDragula.options('third-bag', {\n      moves (el, container, handle) {\n        return handle.classList.contains('handle')\n      }\n    })\n  }\n}\n</script>\n"],"sourceRoot":"src/cui-components"}]}